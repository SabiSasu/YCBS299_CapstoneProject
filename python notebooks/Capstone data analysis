{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNfZmpPZmbZ9/RNyY8gMht5"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"h2g5LXv-TNwo","executionInfo":{"status":"ok","timestamp":1697065776016,"user_tz":240,"elapsed":4690,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"5e8bc9f9-c092-404d-da94-56a18ae879be"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-a347ebc5-7810-4cd1-8376-8cc71c16dc01\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-a347ebc5-7810-4cd1-8376-8cc71c16dc01\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving alteryx_output2.xlsx to alteryx_output2.xlsx\n"]}],"source":["from google.colab import files\n","uploaded = files.upload()"]},{"cell_type":"code","source":["import pandas as pd\n","dataset = pd.read_excel('alteryx_output2.xlsx')\n","dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":342},"id":"tz-EA-8tTvIi","executionInfo":{"status":"ok","timestamp":1697065783448,"user_tz":240,"elapsed":3197,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"8537fae9-595e-4cf0-eefb-0cfde11d3eed"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Sum_NUMBER_OF_INCIDENTS  INCIDENT_YEAR  INCIDENT_MONTH  \\\n","0                     2215           2016              12   \n","1                     2215           2019               9   \n","2                     2215           2023               7   \n","3                     2215           2017               3   \n","4                     2215           2021               5   \n","\n","  INCIDENT_DESCRIPTION_GROUPE INCIDENT_NOM_VILLE INCIDENT_NOM_ARROND  \\\n","0           Alarmes-incendies           Montreal               Anjou   \n","1           Alarmes-incendies           Montreal               Anjou   \n","2           Alarmes-incendies           Montreal               Anjou   \n","3           Alarmes-incendies           Montreal               Anjou   \n","4           Alarmes-incendies           Montreal               Anjou   \n","\n","   NUMBER_OF_INCIDENTS  CASERNE  NO_CIVIQUE             CASERNE_RUE  ...  \\\n","0                   22       28        7650  boulevard ChÃ¢teauneuf  ...   \n","1                   19       28        7650  boulevard ChÃ¢teauneuf  ...   \n","2                   26       28        7650  boulevard ChÃ¢teauneuf  ...   \n","3                   22       28        7650  boulevard ChÃ¢teauneuf  ...   \n","4                   16       28        7650  boulevard ChÃ¢teauneuf  ...   \n","\n","   ARROND_TREES  ARROND_RUELLES_VERTES  ARROND_AVG_CONSTRUCTION_YEAR  \\\n","0            12                      0                          1979   \n","1            12                      0                          1979   \n","2            12                      0                          1979   \n","3            12                      0                          1979   \n","4            12                      0                          1979   \n","\n","   ARROND_EXTERMINATIONS  AVERAGE_TEMP  ARROND_AIDE_ALIMENTAIRE  \\\n","0                   38.0     -4.322581                     14.5   \n","1                   36.0     15.200000                     11.0   \n","2                   50.0      0.000000                      9.5   \n","3                   52.0     -4.387097                      6.5   \n","4                   26.0     14.000000                      3.5   \n","\n","   AVG_NUMBER_OF_INCIDENTS  ABOVE_AVERAGE_NUMBER_OF_INCIDENTS  Population  \\\n","0                17.455882                      Above Average       41928   \n","1                17.486111                      Above Average       41928   \n","2                24.042857                      Above Average       41928   \n","3                15.101449                      Above Average       41928   \n","4                14.432836                      Above Average       41928   \n","\n","   incidents_per_1000  \n","0           52.828659  \n","1           52.828659  \n","2           52.828659  \n","3           52.828659  \n","4           52.828659  \n","\n","[5 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-bb32fe44-4697-40ce-a755-73ed8ca2281f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sum_NUMBER_OF_INCIDENTS</th>\n","      <th>INCIDENT_YEAR</th>\n","      <th>INCIDENT_MONTH</th>\n","      <th>INCIDENT_DESCRIPTION_GROUPE</th>\n","      <th>INCIDENT_NOM_VILLE</th>\n","      <th>INCIDENT_NOM_ARROND</th>\n","      <th>NUMBER_OF_INCIDENTS</th>\n","      <th>CASERNE</th>\n","      <th>NO_CIVIQUE</th>\n","      <th>CASERNE_RUE</th>\n","      <th>...</th>\n","      <th>ARROND_TREES</th>\n","      <th>ARROND_RUELLES_VERTES</th>\n","      <th>ARROND_AVG_CONSTRUCTION_YEAR</th>\n","      <th>ARROND_EXTERMINATIONS</th>\n","      <th>AVERAGE_TEMP</th>\n","      <th>ARROND_AIDE_ALIMENTAIRE</th>\n","      <th>AVG_NUMBER_OF_INCIDENTS</th>\n","      <th>ABOVE_AVERAGE_NUMBER_OF_INCIDENTS</th>\n","      <th>Population</th>\n","      <th>incidents_per_1000</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2215</td>\n","      <td>2016</td>\n","      <td>12</td>\n","      <td>Alarmes-incendies</td>\n","      <td>Montreal</td>\n","      <td>Anjou</td>\n","      <td>22</td>\n","      <td>28</td>\n","      <td>7650</td>\n","      <td>boulevard ChÃ¢teauneuf</td>\n","      <td>...</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>1979</td>\n","      <td>38.0</td>\n","      <td>-4.322581</td>\n","      <td>14.5</td>\n","      <td>17.455882</td>\n","      <td>Above Average</td>\n","      <td>41928</td>\n","      <td>52.828659</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2215</td>\n","      <td>2019</td>\n","      <td>9</td>\n","      <td>Alarmes-incendies</td>\n","      <td>Montreal</td>\n","      <td>Anjou</td>\n","      <td>19</td>\n","      <td>28</td>\n","      <td>7650</td>\n","      <td>boulevard ChÃ¢teauneuf</td>\n","      <td>...</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>1979</td>\n","      <td>36.0</td>\n","      <td>15.200000</td>\n","      <td>11.0</td>\n","      <td>17.486111</td>\n","      <td>Above Average</td>\n","      <td>41928</td>\n","      <td>52.828659</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2215</td>\n","      <td>2023</td>\n","      <td>7</td>\n","      <td>Alarmes-incendies</td>\n","      <td>Montreal</td>\n","      <td>Anjou</td>\n","      <td>26</td>\n","      <td>28</td>\n","      <td>7650</td>\n","      <td>boulevard ChÃ¢teauneuf</td>\n","      <td>...</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>1979</td>\n","      <td>50.0</td>\n","      <td>0.000000</td>\n","      <td>9.5</td>\n","      <td>24.042857</td>\n","      <td>Above Average</td>\n","      <td>41928</td>\n","      <td>52.828659</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2215</td>\n","      <td>2017</td>\n","      <td>3</td>\n","      <td>Alarmes-incendies</td>\n","      <td>Montreal</td>\n","      <td>Anjou</td>\n","      <td>22</td>\n","      <td>28</td>\n","      <td>7650</td>\n","      <td>boulevard ChÃ¢teauneuf</td>\n","      <td>...</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>1979</td>\n","      <td>52.0</td>\n","      <td>-4.387097</td>\n","      <td>6.5</td>\n","      <td>15.101449</td>\n","      <td>Above Average</td>\n","      <td>41928</td>\n","      <td>52.828659</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2215</td>\n","      <td>2021</td>\n","      <td>5</td>\n","      <td>Alarmes-incendies</td>\n","      <td>Montreal</td>\n","      <td>Anjou</td>\n","      <td>16</td>\n","      <td>28</td>\n","      <td>7650</td>\n","      <td>boulevard ChÃ¢teauneuf</td>\n","      <td>...</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>1979</td>\n","      <td>26.0</td>\n","      <td>14.000000</td>\n","      <td>3.5</td>\n","      <td>14.432836</td>\n","      <td>Above Average</td>\n","      <td>41928</td>\n","      <td>52.828659</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb32fe44-4697-40ce-a755-73ed8ca2281f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bb32fe44-4697-40ce-a755-73ed8ca2281f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bb32fe44-4697-40ce-a755-73ed8ca2281f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e6b16b32-00cf-4de6-997e-c8c9a3cd03b3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e6b16b32-00cf-4de6-997e-c8c9a3cd03b3')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e6b16b32-00cf-4de6-997e-c8c9a3cd03b3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["print(dataset.dtypes)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t3X7kExfT-Sj","executionInfo":{"status":"ok","timestamp":1697065657482,"user_tz":240,"elapsed":184,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"8b3d6590-2819-436f-ede3-6b0b40c37902"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Sum_NUMBER_OF_INCIDENTS                int64\n","INCIDENT_YEAR                          int64\n","INCIDENT_MONTH                         int64\n","INCIDENT_DESCRIPTION_GROUPE           object\n","INCIDENT_NOM_VILLE                    object\n","Right_INCIDENT_NOM_ARROND             object\n","NUMBER_OF_INCIDENTS                    int64\n","CASERNE                                int64\n","NO_CIVIQUE                             int64\n","CASERNE_RUE                           object\n","CASERNE_LATITUDE                     float64\n","CASERNE_LONGITUDE                    float64\n","MTM8_X                               float64\n","MTM8_Y                               float64\n","ARROND_UNITS                           int64\n","ARROND_DETERIOATION_LOGEMENTS          int64\n","ARROND_SALUBRITES                      int64\n","ARROND_PERMITS                         int64\n","ARROND_VACANCIES                       int64\n","ARROND_TREES                           int64\n","ARROND_RUELLES_VERTES                  int64\n","ARROND_AVG_CONSTRUCTION_YEAR           int64\n","ARROND_EXTERMINATIONS                float64\n","AVERAGE_TEMP                         float64\n","ARROND_AIDE_ALIMENTAIRE              float64\n","AVG_NUMBER_OF_INCIDENTS              float64\n","ABOVE_AVERAGE_NUMBER_OF_INCIDENTS     object\n","Population                             int64\n","incidents_per_1000                   float64\n","dtype: object\n"]}]},{"cell_type":"code","source":["dataset.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"id":"L9sr6OpvUDQK","executionInfo":{"status":"ok","timestamp":1697065560710,"user_tz":240,"elapsed":166,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"b6aab926-2e41-4686-d786-d10d21fd1569"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       INCIDENT_YEAR  INCIDENT_MONTH  NUMBER_OF_INCIDENTS      CASERNE  \\\n","count    4068.000000     4068.000000          4068.000000  4068.000000   \n","mean     2018.886185        6.389626            17.614798    45.446657   \n","std         2.526880        3.402491            12.259763    22.674276   \n","min      2015.000000        1.000000             1.000000     3.000000   \n","25%      2017.000000        3.000000             8.000000    25.000000   \n","50%      2019.000000        6.000000            16.000000    51.000000   \n","75%      2021.000000        9.000000            25.000000    65.000000   \n","max      2023.000000       12.000000            85.000000    78.000000   \n","\n","         NO_CIVIQUE  CASERNE_LATITUDE  CASERNE_LONGITUDE         MTM8_X  \\\n","count   4068.000000       4068.000000        4068.000000    4068.000000   \n","mean    2783.308505         45.492906         -73.668597  291619.203515   \n","std     4032.658509          0.041551           0.116134    9086.005088   \n","min        5.000000         45.417779         -73.950016  269580.000000   \n","25%      310.000000         45.459943         -73.735441  286383.000000   \n","50%     1212.000000         45.493954         -73.640780  293801.000000   \n","75%     3175.000000         45.517760         -73.572799  299111.500000   \n","max    18661.000000         45.602839         -73.522689  303030.000000   \n","\n","             MTM8_Y  ARROND_UNITS  ...  ARROND_PERMITS  ARROND_VACANCIES  \\\n","count  4.068000e+03   4068.000000  ...     4068.000000       4068.000000   \n","mean   5.039241e+06  38513.930924  ...      719.222468         49.444199   \n","std    4.604169e+03  28319.710964  ...      717.067068         62.948979   \n","min    5.030970e+06      0.000000  ...        0.000000          0.000000   \n","25%    5.035559e+06      0.000000  ...        0.000000          7.000000   \n","50%    5.039374e+06  43782.000000  ...      662.000000         21.000000   \n","75%    5.041988e+06  66200.000000  ...     1276.000000         50.000000   \n","max    5.051439e+06  78743.000000  ...     2134.000000        189.000000   \n","\n","       ARROND_TREES  ARROND_RUELLES_VERTES  ARROND_AVG_CONSTRUCTION_YEAR  \\\n","count   4068.000000            4068.000000                   4068.000000   \n","mean   14467.378319              41.303835                   1476.741642   \n","std    11429.949549              77.390945                    853.919429   \n","min        0.000000               0.000000                      0.000000   \n","25%        0.000000               0.000000                      0.000000   \n","50%    18115.000000               1.000000                   1973.000000   \n","75%    21003.000000              16.000000                   1979.000000   \n","max    35069.000000             269.000000                   1984.000000   \n","\n","       ARROND_EXTERMINATIONS  AVERAGE_TEMP  ARROND_AIDE_ALIMENTAIRE  \\\n","count            3022.000000   4068.000000              4068.000000   \n","mean              222.879550      6.074863                16.117134   \n","std               210.788223     10.223694                15.511871   \n","min                 1.000000    -14.750000                 0.000000   \n","25%                58.000000     -0.967742                 2.000000   \n","50%               135.000000      3.683333                14.500000   \n","75%               369.000000     17.000000                23.500000   \n","max               962.000000     23.741935                68.500000   \n","\n","       AVG_NUMBER_OF_INCIDENTS     Population  \n","count              4068.000000    4068.000000  \n","mean                 16.362702   65736.676745  \n","std                   2.464292   36019.152357  \n","min                   9.808824     920.000000  \n","25%                  14.656716   23566.000000  \n","50%                  16.391304   71546.000000  \n","75%                  17.588235   93842.000000  \n","max                  24.042857  126891.000000  \n","\n","[8 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-80fe7b06-b1b1-4002-96fb-0279d626e563\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>INCIDENT_YEAR</th>\n","      <th>INCIDENT_MONTH</th>\n","      <th>NUMBER_OF_INCIDENTS</th>\n","      <th>CASERNE</th>\n","      <th>NO_CIVIQUE</th>\n","      <th>CASERNE_LATITUDE</th>\n","      <th>CASERNE_LONGITUDE</th>\n","      <th>MTM8_X</th>\n","      <th>MTM8_Y</th>\n","      <th>ARROND_UNITS</th>\n","      <th>...</th>\n","      <th>ARROND_PERMITS</th>\n","      <th>ARROND_VACANCIES</th>\n","      <th>ARROND_TREES</th>\n","      <th>ARROND_RUELLES_VERTES</th>\n","      <th>ARROND_AVG_CONSTRUCTION_YEAR</th>\n","      <th>ARROND_EXTERMINATIONS</th>\n","      <th>AVERAGE_TEMP</th>\n","      <th>ARROND_AIDE_ALIMENTAIRE</th>\n","      <th>AVG_NUMBER_OF_INCIDENTS</th>\n","      <th>Population</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","      <td>4.068000e+03</td>\n","      <td>4068.000000</td>\n","      <td>...</td>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","      <td>3022.000000</td>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","      <td>4068.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2018.886185</td>\n","      <td>6.389626</td>\n","      <td>17.614798</td>\n","      <td>45.446657</td>\n","      <td>2783.308505</td>\n","      <td>45.492906</td>\n","      <td>-73.668597</td>\n","      <td>291619.203515</td>\n","      <td>5.039241e+06</td>\n","      <td>38513.930924</td>\n","      <td>...</td>\n","      <td>719.222468</td>\n","      <td>49.444199</td>\n","      <td>14467.378319</td>\n","      <td>41.303835</td>\n","      <td>1476.741642</td>\n","      <td>222.879550</td>\n","      <td>6.074863</td>\n","      <td>16.117134</td>\n","      <td>16.362702</td>\n","      <td>65736.676745</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.526880</td>\n","      <td>3.402491</td>\n","      <td>12.259763</td>\n","      <td>22.674276</td>\n","      <td>4032.658509</td>\n","      <td>0.041551</td>\n","      <td>0.116134</td>\n","      <td>9086.005088</td>\n","      <td>4.604169e+03</td>\n","      <td>28319.710964</td>\n","      <td>...</td>\n","      <td>717.067068</td>\n","      <td>62.948979</td>\n","      <td>11429.949549</td>\n","      <td>77.390945</td>\n","      <td>853.919429</td>\n","      <td>210.788223</td>\n","      <td>10.223694</td>\n","      <td>15.511871</td>\n","      <td>2.464292</td>\n","      <td>36019.152357</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2015.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>5.000000</td>\n","      <td>45.417779</td>\n","      <td>-73.950016</td>\n","      <td>269580.000000</td>\n","      <td>5.030970e+06</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>-14.750000</td>\n","      <td>0.000000</td>\n","      <td>9.808824</td>\n","      <td>920.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2017.000000</td>\n","      <td>3.000000</td>\n","      <td>8.000000</td>\n","      <td>25.000000</td>\n","      <td>310.000000</td>\n","      <td>45.459943</td>\n","      <td>-73.735441</td>\n","      <td>286383.000000</td>\n","      <td>5.035559e+06</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>7.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>58.000000</td>\n","      <td>-0.967742</td>\n","      <td>2.000000</td>\n","      <td>14.656716</td>\n","      <td>23566.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2019.000000</td>\n","      <td>6.000000</td>\n","      <td>16.000000</td>\n","      <td>51.000000</td>\n","      <td>1212.000000</td>\n","      <td>45.493954</td>\n","      <td>-73.640780</td>\n","      <td>293801.000000</td>\n","      <td>5.039374e+06</td>\n","      <td>43782.000000</td>\n","      <td>...</td>\n","      <td>662.000000</td>\n","      <td>21.000000</td>\n","      <td>18115.000000</td>\n","      <td>1.000000</td>\n","      <td>1973.000000</td>\n","      <td>135.000000</td>\n","      <td>3.683333</td>\n","      <td>14.500000</td>\n","      <td>16.391304</td>\n","      <td>71546.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2021.000000</td>\n","      <td>9.000000</td>\n","      <td>25.000000</td>\n","      <td>65.000000</td>\n","      <td>3175.000000</td>\n","      <td>45.517760</td>\n","      <td>-73.572799</td>\n","      <td>299111.500000</td>\n","      <td>5.041988e+06</td>\n","      <td>66200.000000</td>\n","      <td>...</td>\n","      <td>1276.000000</td>\n","      <td>50.000000</td>\n","      <td>21003.000000</td>\n","      <td>16.000000</td>\n","      <td>1979.000000</td>\n","      <td>369.000000</td>\n","      <td>17.000000</td>\n","      <td>23.500000</td>\n","      <td>17.588235</td>\n","      <td>93842.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2023.000000</td>\n","      <td>12.000000</td>\n","      <td>85.000000</td>\n","      <td>78.000000</td>\n","      <td>18661.000000</td>\n","      <td>45.602839</td>\n","      <td>-73.522689</td>\n","      <td>303030.000000</td>\n","      <td>5.051439e+06</td>\n","      <td>78743.000000</td>\n","      <td>...</td>\n","      <td>2134.000000</td>\n","      <td>189.000000</td>\n","      <td>35069.000000</td>\n","      <td>269.000000</td>\n","      <td>1984.000000</td>\n","      <td>962.000000</td>\n","      <td>23.741935</td>\n","      <td>68.500000</td>\n","      <td>24.042857</td>\n","      <td>126891.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80fe7b06-b1b1-4002-96fb-0279d626e563')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-80fe7b06-b1b1-4002-96fb-0279d626e563 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-80fe7b06-b1b1-4002-96fb-0279d626e563');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-59951e1c-5e85-4422-a9a4-df8674acb114\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-59951e1c-5e85-4422-a9a4-df8674acb114')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-59951e1c-5e85-4422-a9a4-df8674acb114 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":[],"metadata":{"id":"YaJglMl_e33E"}},{"cell_type":"code","source":["dataset.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":829},"id":"aA7I83WBUF2X","executionInfo":{"status":"ok","timestamp":1697043089384,"user_tz":240,"elapsed":241,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"64aba058-7f0c-4f3e-d0c9-8b46c8fd856a"},"execution_count":128,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-128-c187c74d1e71>:1: FutureWarning:\n","\n","The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["                               INCIDENT_YEAR  INCIDENT_MONTH  \\\n","INCIDENT_YEAR                       1.000000       -0.061646   \n","INCIDENT_MONTH                     -0.061646        1.000000   \n","NUMBER_OF_INCIDENTS                 0.053951        0.047231   \n","CASERNE                             0.000581       -0.001102   \n","NO_CIVIQUE                          0.002446       -0.000344   \n","CASERNE_LATITUDE                    0.002765        0.000336   \n","CASERNE_LONGITUDE                   0.000638        0.000621   \n","MTM8_X                              0.000638        0.000620   \n","MTM8_Y                              0.002769        0.000336   \n","ARROND_UNITS                       -0.003895       -0.002187   \n","ARROND_DETERIOATION_LOGEMENTS       0.256007       -0.020068   \n","ARROND_SALUBRITES                   0.159654       -0.006160   \n","ARROND_PERMITS                     -0.069484        0.012823   \n","ARROND_VACANCIES                   -0.003846       -0.002086   \n","ARROND_TREES                       -0.004349       -0.002522   \n","ARROND_RUELLES_VERTES              -0.000666        0.001344   \n","ARROND_AVG_CONSTRUCTION_YEAR       -0.000879       -0.000547   \n","ARROND_EXTERMINATIONS              -0.189408        0.013522   \n","AVERAGE_TEMP                       -0.122796        0.317884   \n","ARROND_AIDE_ALIMENTAIRE            -0.030646        0.268555   \n","AVG_NUMBER_OF_INCIDENTS             0.246530        0.215822   \n","\n","                               NUMBER_OF_INCIDENTS   CASERNE  NO_CIVIQUE  \\\n","INCIDENT_YEAR                             0.053951  0.000581    0.002446   \n","INCIDENT_MONTH                            0.047231 -0.001102   -0.000344   \n","NUMBER_OF_INCIDENTS                       1.000000 -0.135761   -0.173280   \n","CASERNE                                  -0.135761  1.000000   -0.148061   \n","NO_CIVIQUE                               -0.173280 -0.148061    1.000000   \n","CASERNE_LATITUDE                         -0.049118 -0.420564    0.535171   \n","CASERNE_LONGITUDE                         0.235733 -0.453696    0.145725   \n","MTM8_X                                    0.235800 -0.453761    0.145924   \n","MTM8_Y                                   -0.050265 -0.420006    0.535856   \n","ARROND_UNITS                              0.388947 -0.539610    0.099469   \n","ARROND_DETERIOATION_LOGEMENTS             0.088044 -0.066161    0.049379   \n","ARROND_SALUBRITES                         0.271765 -0.124832    0.053110   \n","ARROND_PERMITS                            0.361788 -0.192574   -0.346989   \n","ARROND_VACANCIES                          0.494029 -0.525406   -0.243622   \n","ARROND_TREES                              0.180579 -0.322489    0.214121   \n","ARROND_RUELLES_VERTES                     0.021789 -0.193884   -0.032409   \n","ARROND_AVG_CONSTRUCTION_YEAR              0.291215 -0.428865    0.247038   \n","ARROND_EXTERMINATIONS                     0.107495 -0.261048   -0.196748   \n","AVERAGE_TEMP                              0.036463 -0.000286   -0.001418   \n","ARROND_AIDE_ALIMENTAIRE                   0.198939 -0.401694    0.119712   \n","AVG_NUMBER_OF_INCIDENTS                   0.218841 -0.001326   -0.003272   \n","\n","                               CASERNE_LATITUDE  CASERNE_LONGITUDE    MTM8_X  \\\n","INCIDENT_YEAR                          0.002765           0.000638  0.000638   \n","INCIDENT_MONTH                         0.000336           0.000621  0.000620   \n","NUMBER_OF_INCIDENTS                   -0.049118           0.235733  0.235800   \n","CASERNE                               -0.420564          -0.453696 -0.453761   \n","NO_CIVIQUE                             0.535171           0.145725  0.145924   \n","CASERNE_LATITUDE                       1.000000           0.584417  0.584913   \n","CASERNE_LONGITUDE                      0.584417           1.000000  0.999999   \n","MTM8_X                                 0.584913           0.999999  1.000000   \n","MTM8_Y                                 0.999996           0.582110  0.582606   \n","ARROND_UNITS                           0.327206           0.562805  0.563012   \n","ARROND_DETERIOATION_LOGEMENTS          0.085789           0.063723  0.063880   \n","ARROND_SALUBRITES                      0.089421           0.112665  0.112922   \n","ARROND_PERMITS                        -0.186956           0.283826  0.283629   \n","ARROND_VACANCIES                      -0.009394           0.384907  0.384821   \n","ARROND_TREES                           0.379864           0.467659  0.467923   \n","ARROND_RUELLES_VERTES                  0.171845           0.358692  0.358681   \n","ARROND_AVG_CONSTRUCTION_YEAR           0.422892           0.499494  0.499926   \n","ARROND_EXTERMINATIONS                  0.002433           0.285447  0.285490   \n","AVERAGE_TEMP                          -0.004314          -0.001079 -0.001085   \n","ARROND_AIDE_ALIMENTAIRE                0.394343           0.446074  0.446329   \n","AVG_NUMBER_OF_INCIDENTS               -0.002958          -0.004265 -0.004270   \n","\n","                                 MTM8_Y  ARROND_UNITS  ...  ARROND_SALUBRITES  \\\n","INCIDENT_YEAR                  0.002769     -0.003895  ...           0.159654   \n","INCIDENT_MONTH                 0.000336     -0.002187  ...          -0.006160   \n","NUMBER_OF_INCIDENTS           -0.050265      0.388947  ...           0.271765   \n","CASERNE                       -0.420006     -0.539610  ...          -0.124832   \n","NO_CIVIQUE                     0.535856      0.099469  ...           0.053110   \n","CASERNE_LATITUDE               0.999996      0.327206  ...           0.089421   \n","CASERNE_LONGITUDE              0.582110      0.562805  ...           0.112665   \n","MTM8_X                         0.582606      0.563012  ...           0.112922   \n","MTM8_Y                         1.000000      0.325819  ...           0.088927   \n","ARROND_UNITS                   0.325819      1.000000  ...           0.411600   \n","ARROND_DETERIOATION_LOGEMENTS  0.085627      0.185377  ...           0.167076   \n","ARROND_SALUBRITES              0.088927      0.411600  ...           1.000000   \n","ARROND_PERMITS                -0.188264      0.244980  ...          -0.022547   \n","ARROND_VACANCIES              -0.010733      0.654836  ...           0.168336   \n","ARROND_TREES                   0.378923      0.858611  ...           0.342217   \n","ARROND_RUELLES_VERTES          0.171030      0.504626  ...           0.121511   \n","ARROND_AVG_CONSTRUCTION_YEAR   0.421907      0.766880  ...           0.301042   \n","ARROND_EXTERMINATIONS          0.001742      0.627337  ...           0.034231   \n","AVERAGE_TEMP                  -0.004315     -0.001994  ...          -0.007264   \n","ARROND_AIDE_ALIMENTAIRE        0.393504      0.706289  ...           0.283379   \n","AVG_NUMBER_OF_INCIDENTS       -0.002943     -0.010990  ...           0.074202   \n","\n","                               ARROND_PERMITS  ARROND_VACANCIES  ARROND_TREES  \\\n","INCIDENT_YEAR                       -0.069484         -0.003846     -0.004349   \n","INCIDENT_MONTH                       0.012823         -0.002086     -0.002522   \n","NUMBER_OF_INCIDENTS                  0.361788          0.494029      0.180579   \n","CASERNE                             -0.192574         -0.525406     -0.322489   \n","NO_CIVIQUE                          -0.346989         -0.243622      0.214121   \n","CASERNE_LATITUDE                    -0.186956         -0.009394      0.379864   \n","CASERNE_LONGITUDE                    0.283826          0.384907      0.467659   \n","MTM8_X                               0.283629          0.384821      0.467923   \n","MTM8_Y                              -0.188264         -0.010733      0.378923   \n","ARROND_UNITS                         0.244980          0.654836      0.858611   \n","ARROND_DETERIOATION_LOGEMENTS       -0.123053          0.005967      0.178941   \n","ARROND_SALUBRITES                   -0.022547          0.168336      0.342217   \n","ARROND_PERMITS                       1.000000          0.627324      0.034334   \n","ARROND_VACANCIES                     0.627324          1.000000      0.311426   \n","ARROND_TREES                         0.034334          0.311426      1.000000   \n","ARROND_RUELLES_VERTES                0.081943          0.167307      0.517403   \n","ARROND_AVG_CONSTRUCTION_YEAR         0.323452          0.373282      0.704979   \n","ARROND_EXTERMINATIONS                0.040365          0.371811      0.389472   \n","AVERAGE_TEMP                         0.023005         -0.000067     -0.001073   \n","ARROND_AIDE_ALIMENTAIRE              0.018007          0.348239      0.627463   \n","AVG_NUMBER_OF_INCIDENTS             -0.025632         -0.009407     -0.009332   \n","\n","                               ARROND_RUELLES_VERTES  \\\n","INCIDENT_YEAR                              -0.000666   \n","INCIDENT_MONTH                              0.001344   \n","NUMBER_OF_INCIDENTS                         0.021789   \n","CASERNE                                    -0.193884   \n","NO_CIVIQUE                                 -0.032409   \n","CASERNE_LATITUDE                            0.171845   \n","CASERNE_LONGITUDE                           0.358692   \n","MTM8_X                                      0.358681   \n","MTM8_Y                                      0.171030   \n","ARROND_UNITS                                0.504626   \n","ARROND_DETERIOATION_LOGEMENTS               0.100451   \n","ARROND_SALUBRITES                           0.121511   \n","ARROND_PERMITS                              0.081943   \n","ARROND_VACANCIES                            0.167307   \n","ARROND_TREES                                0.517403   \n","ARROND_RUELLES_VERTES                       1.000000   \n","ARROND_AVG_CONSTRUCTION_YEAR                0.300877   \n","ARROND_EXTERMINATIONS                       0.406701   \n","AVERAGE_TEMP                               -0.001924   \n","ARROND_AIDE_ALIMENTAIRE                     0.447870   \n","AVG_NUMBER_OF_INCIDENTS                    -0.002059   \n","\n","                               ARROND_AVG_CONSTRUCTION_YEAR  \\\n","INCIDENT_YEAR                                     -0.000879   \n","INCIDENT_MONTH                                    -0.000547   \n","NUMBER_OF_INCIDENTS                                0.291215   \n","CASERNE                                           -0.428865   \n","NO_CIVIQUE                                         0.247038   \n","CASERNE_LATITUDE                                   0.422892   \n","CASERNE_LONGITUDE                                  0.499494   \n","MTM8_X                                             0.499926   \n","MTM8_Y                                             0.421907   \n","ARROND_UNITS                                       0.766880   \n","ARROND_DETERIOATION_LOGEMENTS                      0.128824   \n","ARROND_SALUBRITES                                  0.301042   \n","ARROND_PERMITS                                     0.323452   \n","ARROND_VACANCIES                                   0.373282   \n","ARROND_TREES                                       0.704979   \n","ARROND_RUELLES_VERTES                              0.300877   \n","ARROND_AVG_CONSTRUCTION_YEAR                       1.000000   \n","ARROND_EXTERMINATIONS                             -0.288714   \n","AVERAGE_TEMP                                      -0.000459   \n","ARROND_AIDE_ALIMENTAIRE                            0.522380   \n","AVG_NUMBER_OF_INCIDENTS                           -0.007073   \n","\n","                               ARROND_EXTERMINATIONS  AVERAGE_TEMP  \\\n","INCIDENT_YEAR                              -0.189408     -0.122796   \n","INCIDENT_MONTH                              0.013522      0.317884   \n","NUMBER_OF_INCIDENTS                         0.107495      0.036463   \n","CASERNE                                    -0.261048     -0.000286   \n","NO_CIVIQUE                                 -0.196748     -0.001418   \n","CASERNE_LATITUDE                            0.002433     -0.004314   \n","CASERNE_LONGITUDE                           0.285447     -0.001079   \n","MTM8_X                                      0.285490     -0.001085   \n","MTM8_Y                                      0.001742     -0.004315   \n","ARROND_UNITS                                0.627337     -0.001994   \n","ARROND_DETERIOATION_LOGEMENTS              -0.034098     -0.016485   \n","ARROND_SALUBRITES                           0.034231     -0.007264   \n","ARROND_PERMITS                              0.040365      0.023005   \n","ARROND_VACANCIES                            0.371811     -0.000067   \n","ARROND_TREES                                0.389472     -0.001073   \n","ARROND_RUELLES_VERTES                       0.406701     -0.001924   \n","ARROND_AVG_CONSTRUCTION_YEAR               -0.288714     -0.000459   \n","ARROND_EXTERMINATIONS                       1.000000      0.048298   \n","AVERAGE_TEMP                                0.048298      1.000000   \n","ARROND_AIDE_ALIMENTAIRE                     0.426214     -0.124503   \n","AVG_NUMBER_OF_INCIDENTS                    -0.040795      0.166619   \n","\n","                               ARROND_AIDE_ALIMENTAIRE  \\\n","INCIDENT_YEAR                                -0.030646   \n","INCIDENT_MONTH                                0.268555   \n","NUMBER_OF_INCIDENTS                           0.198939   \n","CASERNE                                      -0.401694   \n","NO_CIVIQUE                                    0.119712   \n","CASERNE_LATITUDE                              0.394343   \n","CASERNE_LONGITUDE                             0.446074   \n","MTM8_X                                        0.446329   \n","MTM8_Y                                        0.393504   \n","ARROND_UNITS                                  0.706289   \n","ARROND_DETERIOATION_LOGEMENTS                 0.178908   \n","ARROND_SALUBRITES                             0.283379   \n","ARROND_PERMITS                                0.018007   \n","ARROND_VACANCIES                              0.348239   \n","ARROND_TREES                                  0.627463   \n","ARROND_RUELLES_VERTES                         0.447870   \n","ARROND_AVG_CONSTRUCTION_YEAR                  0.522380   \n","ARROND_EXTERMINATIONS                         0.426214   \n","AVERAGE_TEMP                                 -0.124503   \n","ARROND_AIDE_ALIMENTAIRE                       1.000000   \n","AVG_NUMBER_OF_INCIDENTS                      -0.022930   \n","\n","                               AVG_NUMBER_OF_INCIDENTS  \n","INCIDENT_YEAR                                 0.246530  \n","INCIDENT_MONTH                                0.215822  \n","NUMBER_OF_INCIDENTS                           0.218841  \n","CASERNE                                      -0.001326  \n","NO_CIVIQUE                                   -0.003272  \n","CASERNE_LATITUDE                             -0.002958  \n","CASERNE_LONGITUDE                            -0.004265  \n","MTM8_X                                       -0.004270  \n","MTM8_Y                                       -0.002943  \n","ARROND_UNITS                                 -0.010990  \n","ARROND_DETERIOATION_LOGEMENTS                 0.068796  \n","ARROND_SALUBRITES                             0.074202  \n","ARROND_PERMITS                               -0.025632  \n","ARROND_VACANCIES                             -0.009407  \n","ARROND_TREES                                 -0.009332  \n","ARROND_RUELLES_VERTES                        -0.002059  \n","ARROND_AVG_CONSTRUCTION_YEAR                 -0.007073  \n","ARROND_EXTERMINATIONS                        -0.040795  \n","AVERAGE_TEMP                                  0.166619  \n","ARROND_AIDE_ALIMENTAIRE                      -0.022930  \n","AVG_NUMBER_OF_INCIDENTS                       1.000000  \n","\n","[21 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-da26b584-92c7-4c8b-a7fa-1063d1b92fc5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>INCIDENT_YEAR</th>\n","      <th>INCIDENT_MONTH</th>\n","      <th>NUMBER_OF_INCIDENTS</th>\n","      <th>CASERNE</th>\n","      <th>NO_CIVIQUE</th>\n","      <th>CASERNE_LATITUDE</th>\n","      <th>CASERNE_LONGITUDE</th>\n","      <th>MTM8_X</th>\n","      <th>MTM8_Y</th>\n","      <th>ARROND_UNITS</th>\n","      <th>...</th>\n","      <th>ARROND_SALUBRITES</th>\n","      <th>ARROND_PERMITS</th>\n","      <th>ARROND_VACANCIES</th>\n","      <th>ARROND_TREES</th>\n","      <th>ARROND_RUELLES_VERTES</th>\n","      <th>ARROND_AVG_CONSTRUCTION_YEAR</th>\n","      <th>ARROND_EXTERMINATIONS</th>\n","      <th>AVERAGE_TEMP</th>\n","      <th>ARROND_AIDE_ALIMENTAIRE</th>\n","      <th>AVG_NUMBER_OF_INCIDENTS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>INCIDENT_YEAR</th>\n","      <td>1.000000</td>\n","      <td>-0.061646</td>\n","      <td>0.053951</td>\n","      <td>0.000581</td>\n","      <td>0.002446</td>\n","      <td>0.002765</td>\n","      <td>0.000638</td>\n","      <td>0.000638</td>\n","      <td>0.002769</td>\n","      <td>-0.003895</td>\n","      <td>...</td>\n","      <td>0.159654</td>\n","      <td>-0.069484</td>\n","      <td>-0.003846</td>\n","      <td>-0.004349</td>\n","      <td>-0.000666</td>\n","      <td>-0.000879</td>\n","      <td>-0.189408</td>\n","      <td>-0.122796</td>\n","      <td>-0.030646</td>\n","      <td>0.246530</td>\n","    </tr>\n","    <tr>\n","      <th>INCIDENT_MONTH</th>\n","      <td>-0.061646</td>\n","      <td>1.000000</td>\n","      <td>0.047231</td>\n","      <td>-0.001102</td>\n","      <td>-0.000344</td>\n","      <td>0.000336</td>\n","      <td>0.000621</td>\n","      <td>0.000620</td>\n","      <td>0.000336</td>\n","      <td>-0.002187</td>\n","      <td>...</td>\n","      <td>-0.006160</td>\n","      <td>0.012823</td>\n","      <td>-0.002086</td>\n","      <td>-0.002522</td>\n","      <td>0.001344</td>\n","      <td>-0.000547</td>\n","      <td>0.013522</td>\n","      <td>0.317884</td>\n","      <td>0.268555</td>\n","      <td>0.215822</td>\n","    </tr>\n","    <tr>\n","      <th>NUMBER_OF_INCIDENTS</th>\n","      <td>0.053951</td>\n","      <td>0.047231</td>\n","      <td>1.000000</td>\n","      <td>-0.135761</td>\n","      <td>-0.173280</td>\n","      <td>-0.049118</td>\n","      <td>0.235733</td>\n","      <td>0.235800</td>\n","      <td>-0.050265</td>\n","      <td>0.388947</td>\n","      <td>...</td>\n","      <td>0.271765</td>\n","      <td>0.361788</td>\n","      <td>0.494029</td>\n","      <td>0.180579</td>\n","      <td>0.021789</td>\n","      <td>0.291215</td>\n","      <td>0.107495</td>\n","      <td>0.036463</td>\n","      <td>0.198939</td>\n","      <td>0.218841</td>\n","    </tr>\n","    <tr>\n","      <th>CASERNE</th>\n","      <td>0.000581</td>\n","      <td>-0.001102</td>\n","      <td>-0.135761</td>\n","      <td>1.000000</td>\n","      <td>-0.148061</td>\n","      <td>-0.420564</td>\n","      <td>-0.453696</td>\n","      <td>-0.453761</td>\n","      <td>-0.420006</td>\n","      <td>-0.539610</td>\n","      <td>...</td>\n","      <td>-0.124832</td>\n","      <td>-0.192574</td>\n","      <td>-0.525406</td>\n","      <td>-0.322489</td>\n","      <td>-0.193884</td>\n","      <td>-0.428865</td>\n","      <td>-0.261048</td>\n","      <td>-0.000286</td>\n","      <td>-0.401694</td>\n","      <td>-0.001326</td>\n","    </tr>\n","    <tr>\n","      <th>NO_CIVIQUE</th>\n","      <td>0.002446</td>\n","      <td>-0.000344</td>\n","      <td>-0.173280</td>\n","      <td>-0.148061</td>\n","      <td>1.000000</td>\n","      <td>0.535171</td>\n","      <td>0.145725</td>\n","      <td>0.145924</td>\n","      <td>0.535856</td>\n","      <td>0.099469</td>\n","      <td>...</td>\n","      <td>0.053110</td>\n","      <td>-0.346989</td>\n","      <td>-0.243622</td>\n","      <td>0.214121</td>\n","      <td>-0.032409</td>\n","      <td>0.247038</td>\n","      <td>-0.196748</td>\n","      <td>-0.001418</td>\n","      <td>0.119712</td>\n","      <td>-0.003272</td>\n","    </tr>\n","    <tr>\n","      <th>CASERNE_LATITUDE</th>\n","      <td>0.002765</td>\n","      <td>0.000336</td>\n","      <td>-0.049118</td>\n","      <td>-0.420564</td>\n","      <td>0.535171</td>\n","      <td>1.000000</td>\n","      <td>0.584417</td>\n","      <td>0.584913</td>\n","      <td>0.999996</td>\n","      <td>0.327206</td>\n","      <td>...</td>\n","      <td>0.089421</td>\n","      <td>-0.186956</td>\n","      <td>-0.009394</td>\n","      <td>0.379864</td>\n","      <td>0.171845</td>\n","      <td>0.422892</td>\n","      <td>0.002433</td>\n","      <td>-0.004314</td>\n","      <td>0.394343</td>\n","      <td>-0.002958</td>\n","    </tr>\n","    <tr>\n","      <th>CASERNE_LONGITUDE</th>\n","      <td>0.000638</td>\n","      <td>0.000621</td>\n","      <td>0.235733</td>\n","      <td>-0.453696</td>\n","      <td>0.145725</td>\n","      <td>0.584417</td>\n","      <td>1.000000</td>\n","      <td>0.999999</td>\n","      <td>0.582110</td>\n","      <td>0.562805</td>\n","      <td>...</td>\n","      <td>0.112665</td>\n","      <td>0.283826</td>\n","      <td>0.384907</td>\n","      <td>0.467659</td>\n","      <td>0.358692</td>\n","      <td>0.499494</td>\n","      <td>0.285447</td>\n","      <td>-0.001079</td>\n","      <td>0.446074</td>\n","      <td>-0.004265</td>\n","    </tr>\n","    <tr>\n","      <th>MTM8_X</th>\n","      <td>0.000638</td>\n","      <td>0.000620</td>\n","      <td>0.235800</td>\n","      <td>-0.453761</td>\n","      <td>0.145924</td>\n","      <td>0.584913</td>\n","      <td>0.999999</td>\n","      <td>1.000000</td>\n","      <td>0.582606</td>\n","      <td>0.563012</td>\n","      <td>...</td>\n","      <td>0.112922</td>\n","      <td>0.283629</td>\n","      <td>0.384821</td>\n","      <td>0.467923</td>\n","      <td>0.358681</td>\n","      <td>0.499926</td>\n","      <td>0.285490</td>\n","      <td>-0.001085</td>\n","      <td>0.446329</td>\n","      <td>-0.004270</td>\n","    </tr>\n","    <tr>\n","      <th>MTM8_Y</th>\n","      <td>0.002769</td>\n","      <td>0.000336</td>\n","      <td>-0.050265</td>\n","      <td>-0.420006</td>\n","      <td>0.535856</td>\n","      <td>0.999996</td>\n","      <td>0.582110</td>\n","      <td>0.582606</td>\n","      <td>1.000000</td>\n","      <td>0.325819</td>\n","      <td>...</td>\n","      <td>0.088927</td>\n","      <td>-0.188264</td>\n","      <td>-0.010733</td>\n","      <td>0.378923</td>\n","      <td>0.171030</td>\n","      <td>0.421907</td>\n","      <td>0.001742</td>\n","      <td>-0.004315</td>\n","      <td>0.393504</td>\n","      <td>-0.002943</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_UNITS</th>\n","      <td>-0.003895</td>\n","      <td>-0.002187</td>\n","      <td>0.388947</td>\n","      <td>-0.539610</td>\n","      <td>0.099469</td>\n","      <td>0.327206</td>\n","      <td>0.562805</td>\n","      <td>0.563012</td>\n","      <td>0.325819</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>0.411600</td>\n","      <td>0.244980</td>\n","      <td>0.654836</td>\n","      <td>0.858611</td>\n","      <td>0.504626</td>\n","      <td>0.766880</td>\n","      <td>0.627337</td>\n","      <td>-0.001994</td>\n","      <td>0.706289</td>\n","      <td>-0.010990</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_DETERIOATION_LOGEMENTS</th>\n","      <td>0.256007</td>\n","      <td>-0.020068</td>\n","      <td>0.088044</td>\n","      <td>-0.066161</td>\n","      <td>0.049379</td>\n","      <td>0.085789</td>\n","      <td>0.063723</td>\n","      <td>0.063880</td>\n","      <td>0.085627</td>\n","      <td>0.185377</td>\n","      <td>...</td>\n","      <td>0.167076</td>\n","      <td>-0.123053</td>\n","      <td>0.005967</td>\n","      <td>0.178941</td>\n","      <td>0.100451</td>\n","      <td>0.128824</td>\n","      <td>-0.034098</td>\n","      <td>-0.016485</td>\n","      <td>0.178908</td>\n","      <td>0.068796</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_SALUBRITES</th>\n","      <td>0.159654</td>\n","      <td>-0.006160</td>\n","      <td>0.271765</td>\n","      <td>-0.124832</td>\n","      <td>0.053110</td>\n","      <td>0.089421</td>\n","      <td>0.112665</td>\n","      <td>0.112922</td>\n","      <td>0.088927</td>\n","      <td>0.411600</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>-0.022547</td>\n","      <td>0.168336</td>\n","      <td>0.342217</td>\n","      <td>0.121511</td>\n","      <td>0.301042</td>\n","      <td>0.034231</td>\n","      <td>-0.007264</td>\n","      <td>0.283379</td>\n","      <td>0.074202</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_PERMITS</th>\n","      <td>-0.069484</td>\n","      <td>0.012823</td>\n","      <td>0.361788</td>\n","      <td>-0.192574</td>\n","      <td>-0.346989</td>\n","      <td>-0.186956</td>\n","      <td>0.283826</td>\n","      <td>0.283629</td>\n","      <td>-0.188264</td>\n","      <td>0.244980</td>\n","      <td>...</td>\n","      <td>-0.022547</td>\n","      <td>1.000000</td>\n","      <td>0.627324</td>\n","      <td>0.034334</td>\n","      <td>0.081943</td>\n","      <td>0.323452</td>\n","      <td>0.040365</td>\n","      <td>0.023005</td>\n","      <td>0.018007</td>\n","      <td>-0.025632</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_VACANCIES</th>\n","      <td>-0.003846</td>\n","      <td>-0.002086</td>\n","      <td>0.494029</td>\n","      <td>-0.525406</td>\n","      <td>-0.243622</td>\n","      <td>-0.009394</td>\n","      <td>0.384907</td>\n","      <td>0.384821</td>\n","      <td>-0.010733</td>\n","      <td>0.654836</td>\n","      <td>...</td>\n","      <td>0.168336</td>\n","      <td>0.627324</td>\n","      <td>1.000000</td>\n","      <td>0.311426</td>\n","      <td>0.167307</td>\n","      <td>0.373282</td>\n","      <td>0.371811</td>\n","      <td>-0.000067</td>\n","      <td>0.348239</td>\n","      <td>-0.009407</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_TREES</th>\n","      <td>-0.004349</td>\n","      <td>-0.002522</td>\n","      <td>0.180579</td>\n","      <td>-0.322489</td>\n","      <td>0.214121</td>\n","      <td>0.379864</td>\n","      <td>0.467659</td>\n","      <td>0.467923</td>\n","      <td>0.378923</td>\n","      <td>0.858611</td>\n","      <td>...</td>\n","      <td>0.342217</td>\n","      <td>0.034334</td>\n","      <td>0.311426</td>\n","      <td>1.000000</td>\n","      <td>0.517403</td>\n","      <td>0.704979</td>\n","      <td>0.389472</td>\n","      <td>-0.001073</td>\n","      <td>0.627463</td>\n","      <td>-0.009332</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_RUELLES_VERTES</th>\n","      <td>-0.000666</td>\n","      <td>0.001344</td>\n","      <td>0.021789</td>\n","      <td>-0.193884</td>\n","      <td>-0.032409</td>\n","      <td>0.171845</td>\n","      <td>0.358692</td>\n","      <td>0.358681</td>\n","      <td>0.171030</td>\n","      <td>0.504626</td>\n","      <td>...</td>\n","      <td>0.121511</td>\n","      <td>0.081943</td>\n","      <td>0.167307</td>\n","      <td>0.517403</td>\n","      <td>1.000000</td>\n","      <td>0.300877</td>\n","      <td>0.406701</td>\n","      <td>-0.001924</td>\n","      <td>0.447870</td>\n","      <td>-0.002059</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_AVG_CONSTRUCTION_YEAR</th>\n","      <td>-0.000879</td>\n","      <td>-0.000547</td>\n","      <td>0.291215</td>\n","      <td>-0.428865</td>\n","      <td>0.247038</td>\n","      <td>0.422892</td>\n","      <td>0.499494</td>\n","      <td>0.499926</td>\n","      <td>0.421907</td>\n","      <td>0.766880</td>\n","      <td>...</td>\n","      <td>0.301042</td>\n","      <td>0.323452</td>\n","      <td>0.373282</td>\n","      <td>0.704979</td>\n","      <td>0.300877</td>\n","      <td>1.000000</td>\n","      <td>-0.288714</td>\n","      <td>-0.000459</td>\n","      <td>0.522380</td>\n","      <td>-0.007073</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_EXTERMINATIONS</th>\n","      <td>-0.189408</td>\n","      <td>0.013522</td>\n","      <td>0.107495</td>\n","      <td>-0.261048</td>\n","      <td>-0.196748</td>\n","      <td>0.002433</td>\n","      <td>0.285447</td>\n","      <td>0.285490</td>\n","      <td>0.001742</td>\n","      <td>0.627337</td>\n","      <td>...</td>\n","      <td>0.034231</td>\n","      <td>0.040365</td>\n","      <td>0.371811</td>\n","      <td>0.389472</td>\n","      <td>0.406701</td>\n","      <td>-0.288714</td>\n","      <td>1.000000</td>\n","      <td>0.048298</td>\n","      <td>0.426214</td>\n","      <td>-0.040795</td>\n","    </tr>\n","    <tr>\n","      <th>AVERAGE_TEMP</th>\n","      <td>-0.122796</td>\n","      <td>0.317884</td>\n","      <td>0.036463</td>\n","      <td>-0.000286</td>\n","      <td>-0.001418</td>\n","      <td>-0.004314</td>\n","      <td>-0.001079</td>\n","      <td>-0.001085</td>\n","      <td>-0.004315</td>\n","      <td>-0.001994</td>\n","      <td>...</td>\n","      <td>-0.007264</td>\n","      <td>0.023005</td>\n","      <td>-0.000067</td>\n","      <td>-0.001073</td>\n","      <td>-0.001924</td>\n","      <td>-0.000459</td>\n","      <td>0.048298</td>\n","      <td>1.000000</td>\n","      <td>-0.124503</td>\n","      <td>0.166619</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_AIDE_ALIMENTAIRE</th>\n","      <td>-0.030646</td>\n","      <td>0.268555</td>\n","      <td>0.198939</td>\n","      <td>-0.401694</td>\n","      <td>0.119712</td>\n","      <td>0.394343</td>\n","      <td>0.446074</td>\n","      <td>0.446329</td>\n","      <td>0.393504</td>\n","      <td>0.706289</td>\n","      <td>...</td>\n","      <td>0.283379</td>\n","      <td>0.018007</td>\n","      <td>0.348239</td>\n","      <td>0.627463</td>\n","      <td>0.447870</td>\n","      <td>0.522380</td>\n","      <td>0.426214</td>\n","      <td>-0.124503</td>\n","      <td>1.000000</td>\n","      <td>-0.022930</td>\n","    </tr>\n","    <tr>\n","      <th>AVG_NUMBER_OF_INCIDENTS</th>\n","      <td>0.246530</td>\n","      <td>0.215822</td>\n","      <td>0.218841</td>\n","      <td>-0.001326</td>\n","      <td>-0.003272</td>\n","      <td>-0.002958</td>\n","      <td>-0.004265</td>\n","      <td>-0.004270</td>\n","      <td>-0.002943</td>\n","      <td>-0.010990</td>\n","      <td>...</td>\n","      <td>0.074202</td>\n","      <td>-0.025632</td>\n","      <td>-0.009407</td>\n","      <td>-0.009332</td>\n","      <td>-0.002059</td>\n","      <td>-0.007073</td>\n","      <td>-0.040795</td>\n","      <td>0.166619</td>\n","      <td>-0.022930</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>21 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da26b584-92c7-4c8b-a7fa-1063d1b92fc5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-da26b584-92c7-4c8b-a7fa-1063d1b92fc5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-da26b584-92c7-4c8b-a7fa-1063d1b92fc5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-96ee0881-2f26-44d9-880e-129a790f488d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96ee0881-2f26-44d9-880e-129a790f488d')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-96ee0881-2f26-44d9-880e-129a790f488d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":128}]},{"cell_type":"code","source":["dataset['date'] = pd.to_datetime(dict(year=dataset.INCIDENT_YEAR, month=dataset.INCIDENT_MONTH, day=1))"],"metadata":{"id":"yINMmuZyYz8B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["grouped = dataset.groupby('date', as_index=False)['NUMBER_OF_INCIDENTS'].sum()"],"metadata":{"id":"4uCy23zFZXxO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ax = grouped.plot(x='date', y='NUMBER_OF_INCIDENTS', figsize=(12,6))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"iyId4UHHZG_b","executionInfo":{"status":"ok","timestamp":1697028865732,"user_tz":240,"elapsed":532,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"fe390d18-077d-4942-e8e2-adfbb26f51dc"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"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zK9+9SvU1tbiAx/4wIz3ffKTn8Q3v/lN/P73v8fHPvaxvJ9XNj72sY/hF7/4Bb73ve/hU5/61Iz3P/nkkxgeHsb/+T//J+3H6z0QsNls+OhHP4qbb74Z27ZtwwUXXKD5Y434eWlra4PNZsP//M//4GMf+xg/CCAIgiAIgiAIQj9kTbcoN998M84++2zcc889BX8up9OJf/u3f+P28oceegj/9m//BqfTmfbxF198MWpra+FyuXD++efjX//1X2cM4rt370ZtbW3Snw9+8INJj/nhD3+I2tpauN1uXHbZZUgkErjjjjs0PedDhw5h0aJFcLlcM97X3d2N+vp6vofNmD17dtLzGRkZ0fS10uH1enHPPffg/vvvx/j4+Iz3s31u9V58obDPxXb2AWB8fHzGv/N1110342ML/XmZNWsWvvvd7+Luu+9GU1MTrrrqKnzpS1/CsWPH8vp8BEEQBEEQBFHNkCIOyR6+74sby/a18+VrX/sarrrqqrSKrF7e97734eKLL8ZXvvIV/O53v8PmzZsRi8XSPvY3v/kNVqxYgWg0ij179uAjH/kImpqakgLBli1bhj/96U9JH1dfX5/037feeis++9nPYmxsDPfccw8uvvhiXHzxxZqfs95gtxdeeAF1dXX8v5uamnR9fCq33XYbvvGNb+BrX/savvKVrxT03LTAPqd6laGurg7bt29PelxNTU3ajy/05+VDH/oQ3vWud+G5557Dyy+/jN/97nf4yle+gj/96U943etel9fnJAiCIAiCIAgz0D8ewlQ4hsXttSX5ejSIQxps9NrDzcBll12GjRs34q677sJ73vMe/vb6+noEAgEkEgnYbIrpge0lp+4DA8Dq1auxfPlyvOMd78CKFStw1lln8STvVObMmYPFixcDAFasWIGjR4/i85//PO69916e2M0S1bPR0NDAH/Pb3/4WixcvxoUXXohrrrkm59996dKlePHFFxGJRGao4r29vZiYmMDSpUuT3r5gwQLDdsQBaQ/+y1/+Mt7znvfgwx/+8IznBwAHDhzARRddZMjX279/PwDp78Gw2Ww5/50ZmX5e9FBXV4cbbrgBN9xwA+677z5s3LgR9913Hw3iBEEQBEEQhKV52482o388hC3/92o0eme6bo2GrOkW56tf/Sr+/Oc/Y/Pmzfxty5YtQywWmzFIM+U0dUBlvO9978Nz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PFe65erPz7LH6iLPUq2traqoqFBLS0tK7+Ihepyr7ML5yh6cq+zBucounK/swbnKHpyr7MG5SoyczYj7fD7deOON8vl86T4UjIFzlV04X9mDc5U9OFfZhfOVPThX2YNzlT04V4mRsxlxAAAAAAAyUc5mxAEAAAAAyEQE4gAAAAAApBCBOAAAAAAAKUQgDgAAAABACmVsIH777bfr6KOPVllZmSZOnKjzzjtPmzZtGvSY7u5uXXHFFRo/frxKS0t1/vnnq6mpadBjvvWtb2nx4sXy+XxauHDhQc+zdetWWZZ10H9vvPFGMl9ezknV+ZIk27Z15513avbs2fL5fJo0aZJuu+22ZL20nJOqc3XTTTcN+7tVUlKSzJeXU1L5e/X000/ruOOOU1lZmaqrq3X++edr69atSXpluSmV5+vRRx/VwoULVVxcrGnTpuknP/lJsl5WTkrEuVq3bp0uuugiTZkyRUVFRZo7d65+/vOfH/RcL730ko488kj5fD4dcsgheuCBB5L98nJKqs5VQ0ODLr74Ys2ePVsul0tXXnllKl5ezknV+frDH/6gM844Q9XV1SovL9eSJUv09NNPp+Q15opUnau///3vOuGEEzR+/HgVFRVpzpw5+tnPfpaS15jpMjYQf/nll3XFFVfojTfe0LPPPqu+vj596lOfUkdHh/OYq666Sn/5y1/02GOP6eWXX9bu3bv1uc997qDv9bWvfU1f/OIXR32+5557Tg0NDc5/ixcvTvhrymWpPF/f/va3dd999+nOO+/Ue++9p8cff1zHHHNMUl5XLkrVufrud7876HeqoaFB8+bN0+c///mkvbZck6pztWXLFp177rn65Cc/qbVr1+rpp5/W3r17h/0+GFmqztdf//pXXXLJJfrGN76h9evX65e//KV+9rOf6Re/+EXSXluuScS5Wr16tSZOnKjf/e532rBhg37wgx/oe9/73qDzsGXLFp199tlaunSp1q5dqyuvvFKXXXYZAUMUUnWuenp6VF1dreuuu04LFixI6WvMJak6X6+88orOOOMM/c///I9Wr16tpUuX6jOf+YzWrFmT0tebzVJ1rkpKSrRy5Uq98sor2rhxo6677jpdd911+rd/+7eUvt6MZGeJPXv22JLsl19+2bZt225ubrYLCgrsxx57zHnMxo0bbUn266+/ftDX33jjjfaCBQsO+viWLVtsSfaaNWuSdeh5KVnn691337U9Ho/93nvvJe3Y802yztVQa9eutSXZr7zySsKOPd8k61w99thjtsfjsf1+v/Oxxx9/3LYsy+7t7U38C8kTyTpfF110kX3BBRcM+tjdd99tT5482Q4EAol9EXki3nNlfPOb37SXLl3q/Puaa66x58+fP+gxX/ziF+1ly5Yl+BXkj2Sdq4FOOeUU+9vf/nZCjztfpeJ8GfPmzbNvvvnmxBx4HkrlufrsZz9rf+lLX0rMgWexjM2ID9XS0iJJGjdunKTgHZi+vj6dfvrpzmPmzJmjqVOn6vXXX4/6+59zzjmaOHGiTjzxRD3++OOJOeg8lqzz9Ze//EUzZ87UE088oRkzZmj69Om67LLLtH///sS+gDyS7N8t47777tPs2bN10kknxXfAeSxZ52rx4sVyuVy6//775ff71dLSot/+9rc6/fTTVVBQkNgXkUeSdb56enpUWFg46GNFRUXauXOntm3bloAjzz+JOlctLS3O95Ck119/fdD3kKRly5bF9bc03yXrXCE5UnW+AoGA2traOKdxSNW5WrNmjV577TWdcsopCTry7JUVgXggENCVV16pE044QYcddpgkqbGxUV6vV5WVlYMeW1NTo8bGxoi/d2lpqX7605/qscce05NPPqkTTzxR5513HsF4HJJ5vj766CNt27ZNjz32mB588EE98MADWr16tS644IJEvoS8kcxzNVB3d7ceeughXXrppfEect5K5rmaMWOGnnnmGX3/+9+Xz+dTZWWldu7cqUcffTSRLyGvJPN8LVu2TH/4wx/0/PPPKxAIaPPmzfrpT38qKdjniugk6ly99tpr+v3vf68VK1Y4H2tsbFRNTc1B36O1tVVdXV2JfSF5IJnnComXyvN15513qr29XV/4whcSdvz5JBXnavLkyfL5fDrqqKN0xRVX6LLLLkv468g2nnQfQCSuuOIKrV+/Xn//+98T/r0nTJig73znO86/jz76aO3evVs/+clPdM455yT8+fJBMs9XIBBQT0+PHnzwQc2ePVuS9O///u9avHixNm3apEMPPTThz5nLknmuBvrjH/+otrY2LV++PKnPk8uSea4aGxt1+eWXa/ny5brooovU1tamG264QRdccIGeffZZWZaV8OfMdck8X5dffrk+/PBDffrTn1ZfX5/Ky8v17W9/WzfddJNcrqy4v55REnGu1q9fr3PPPVc33nijPvWpTyXw6DAQ5yq7pOp8Pfzww7r55pv15z//WRMnToz5ufJZKs7V3/72N7W3t+uNN97Qtddeq0MOOUQXXXRRPIed9TL+HXvlypV64okn9OKLL2ry5MnOx2tra9Xb26vm5uZBj29qalJtbW1cz3nsscfqgw8+iOt75Ktkn6+6ujp5PB4nCJekuXPnSpK2b98e38HnmVT+bt1333369Kc/fVBmCJFJ9rm69957VVFRoTvuuEOLFi3SySefrN/97nd6/vnntWrVqkS9jLyR7PNlWZZ+/OMfq729Xdu2bVNjY6MzsHLmzJkJeQ35IhHn6t1339Vpp52mFStW6Lrrrhv0udra2oOm4jc1Nam8vFxFRUWJfTE5LtnnComVqvP1n//5n7rsssv06KOPHtQGgsik6lzNmDFDhx9+uC6//HJdddVVuummmxL9UrJOxgbitm1r5cqV+uMf/6gXXnhBM2bMGPT5xYsXq6CgQM8//7zzsU2bNmn79u1asmRJXM+9du1a1dXVxfU98k2qztcJJ5yg/v5+ffjhh87HNm/eLEmaNm1anK8iP6T6d2vLli168cUXKUuPQarOVWdn50GZVLfbLSlYhYLIpPp3y+12a9KkSfJ6vXrkkUe0ZMkSVVdXx/068kGiztWGDRu0dOlSLV++fNg1mkuWLBn0PSTp2Wefjfs6JZ+k6lwhMVJ5vh555BF99atf1SOPPKKzzz47OS8oh6Xzd8tUuOa9tI2JG8O//Mu/2BUVFfZLL71kNzQ0OP91dnY6j/nGN75hT5061X7hhRfst956y16yZIm9ZMmSQd/n/ffft9esWWN//etft2fPnm2vWbPGXrNmjd3T02Pbtm0/8MAD9sMPP2xv3LjR3rhxo33bbbfZLpfL/o//+I+Uvt5sl6rz5ff77SOPPNI++eST7bffftt+66237GOPPdY+44wzUvp6s1mqzpVx3XXX2fX19XZ/f39KXl8uSdW5ev75523Lsuybb77Z3rx5s7169Wp72bJl9rRp0wY9F0aXqvP18ccf27/61a/sjRs32mvWrLG/9a1v2YWFhfaqVatS+nqzWSLO1TvvvGNXV1fbX/rSlwZ9jz179jiP+eijj+zi4mL76quvtjdu3Gjfe++9ttvttp966qmUvt5slqpzZdu287u2ePFi++KLL7bXrFljb9iwIWWvNRek6nw99NBDtsfjse+9995Bj2lubk7p681mqTpXv/jFL+zHH3/c3rx5s71582b7vvvus8vKyuwf/OAHKX29mShjA3FJw/53//33O4/p6uqyv/nNb9pVVVV2cXGx/dnPftZuaGgY9H1OOeWUYb/Pli1bbNsOBuJz5861i4uL7fLycvuYY44ZNKYfkUnV+bJt2961a5f9uc99zi4tLbVramrsr3zlK/a+fftS9EqzXyrPld/vtydPnmx///vfT9Gryy2pPFePPPKIvWjRIrukpMSurq62zznnHHvjxo0peqW5IVXn6+OPP7aPO+44u6SkxC4uLrZPO+00+4033kjhK81+iThXN95447DfY9q0aYOe68UXX7QXLlxoe71ee+bMmYOeA2NL5bmK5DEYXarO10h/J5cvX566F5vlUnWu7r77bnv+/PlOrLVo0SL7l7/85aCVqfnKsm3bHjZVDgAAAAAAEi5je8QBAAAAAMhFBOIAAAAAAKQQgTgAAAAAAClEIA4AAAAAQAoRiAMAAAAAkEIE4gAAAAAApBCBOAAAAAAAKUQgDgBAnjn11FN15ZVXpvswAADIWwTiAABgRC+99JIsy1Jzc3O6DwUAgJxBIA4AAAAAQAoRiAMAkMM6Ojr05S9/WaWlpaqrq9NPf/rTQZ//7W9/q6OOOkplZWWqra3VxRdfrD179kiStm7dqqVLl0qSqqqqZFmWvvKVr0iSAoGAbr/9ds2YMUNFRUVasGCB/uu//iulrw0AgGxFIA4AQA67+uqr9fLLL+vPf/6znnnmGb300kt6++23nc/39fXp1ltv1bp16/SnP/1JW7dudYLtKVOm6L//+78lSZs2bVJDQ4N+/vOfS5Juv/12Pfjgg/r1r3+tDRs26KqrrtKXvvQlvfzyyyl/jQAAZBvLtm073QcBAAASr729XePHj9fvfvc7ff7zn5ck7d+/X5MnT9aKFSt01113HfQ1b731lo4++mi1tbWptLRUL730kpYuXaoDBw6osrJSktTT06Nx48bpueee05IlS5yvveyyy9TZ2amHH344FS8PAICs5Un3AQAAgOT48MMP1dvbq2OPPdb52Lhx43TooYc6/169erVuuukmrVu3TgcOHFAgEJAkbd++XfPmzRv2+37wwQfq7OzUGWecMejjvb29WrRoURJeCQAAuYVAHACAPNXR0aFly5Zp2bJleuihh1RdXa3t27dr2bJl6u3tHfHr2tvbJUlPPvmkJk2aNOhzPp8vqccMAEAuIBAHACBHzZo1SwUFBVq1apWmTp0qSTpw4IA2b96sU045Re+995727dunH/3oR5oyZYqkYGn6QF6vV5Lk9/udj82bN08+n0/bt2/XKaeckqJXAwBA7iAQBwAgR5WWlurSSy/V1VdfrfHjx2vixIn6wQ9+IJcrOKt16tSp8nq9uueee/SNb3xD69ev16233jroe0ybNk2WZemJJ57QWWedpaKiIpWVlem73/2urrrqKgUCAZ144olqaWnRq6++qvLyci1fvjwdLxcAgKzB1HQAAHLYT37yE5100kn6zGc+o9NPP10nnniiFi9eLEmqrq7WAw88oMcee0zz5s3Tj370I915552Dvn7SpEm6+eabde2116qmpkYrV66UJN166626/vrrdfvtt2vu3Lk688wz9eSTT2rGjBkpf40AAGQbpqYDAAAAAJBCZMQBAAAAAEghAnEAAAAAAFKIQBwAAAAAgBQiEAcAAAAAIIUIxAEAAAAASCECcQAAAAAAUohAHAAAAACAFCIQBwAAAAAghQjEAQAAAABIIQJxAAAAAABSiEAcAAAAAIAUIhAHAAAAACCF/h/roRVFDeLZwwAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Feature analysis"],"metadata":{"id":"uBupA5Ih8MSa"}},{"cell_type":"code","source":["column = {\n","    'NUMBER_OF_INCIDENTS':'sum',\n","    'ARROND_UNITS':'median',\n","    'ARROND_DETERIOATION_LOGEMENTS':'median',\n","    'ARROND_SALUBRITES':'median',\n","    'ARROND_PERMITS':'median',\n","    'ARROND_VACANCIES':'median',\n","    'ARROND_TREES':'median',\n","    'ARROND_RUELLES_VERTES':'median',\n","    'ARROND_AVG_CONSTRUCTION_YEAR':'median',\n","    'ARROND_EXTERMINATIONS':'median',\n","    'AVERAGE_TEMP':'median',\n","    'ARROND_AIDE_ALIMENTAIRE':'median',\n","    'Population':'median',\n","    'incidents_per_1000':'median'\n","}\n","grouped2 = dataset.groupby('INCIDENT_NOM_ARROND', as_index=False).agg(column)\n","#grouped2 = dataset.groupby('INCIDENT_NOM_ARROND', as_index=False)['ARROND_PERMITS'].sum()\n","#grouped2 = dataset.groupby('INCIDENT_NOM_ARROND', as_index=False)['NUMBER_OF_INCIDENTS'].sum()"],"metadata":{"id":"PWYJ8_Cv817F","executionInfo":{"status":"ok","timestamp":1697065786940,"user_tz":240,"elapsed":142,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["grouped2.head(50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":714},"id":"ujApIhDJ9iqa","executionInfo":{"status":"ok","timestamp":1697065789356,"user_tz":240,"elapsed":172,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"03384943-638b-47c4-dfd5-85d9f39959ff"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        INCIDENT_NOM_ARROND  NUMBER_OF_INCIDENTS  ARROND_UNITS  \\\n","0     Ahuntsic-Cartierville                 7248       66200.0   \n","1                     Anjou                 2215       20250.0   \n","2              Beaconsfield                  804           0.0   \n","3                    Dorval                 1793           0.0   \n","4                 Hampstead                  412           0.0   \n","5                  Kirkland                  755           0.0   \n","6                   LaSalle                 3357       40006.0   \n","7                   Lachine                 2988       23029.0   \n","8     Le Plateau-Mont-Royal                 8017       66218.0   \n","9              Le Sud-Ouest                 5276       49880.0   \n","10               Mont-Royal                 1847           0.0   \n","11                Outremont                 1654       10921.0   \n","12      Pierrefonds-Roxboro                 2643       26990.0   \n","13            Pointe-Claire                 2329           0.0   \n","14            Saint-Laurent                 7003       43782.0   \n","15  Sainte-Anne-de-Bellevue                  399           0.0   \n","16               Senneville                  103           0.0   \n","17                   Verdun                 3384       38340.0   \n","18              Ville-Marie                17274       78743.0   \n","19                Westmount                 2156           0.0   \n","\n","    ARROND_DETERIOATION_LOGEMENTS  ARROND_SALUBRITES  ARROND_PERMITS  \\\n","0                             0.0               92.0             0.0   \n","1                             0.0                3.0           481.0   \n","2                             0.0                0.0             0.0   \n","3                             0.0                0.0             0.0   \n","4                             0.0                0.0             0.0   \n","5                             0.0                0.0             0.0   \n","6                             0.0                3.0           901.0   \n","7                             0.0                2.0           468.0   \n","8                             0.0               41.0          1993.0   \n","9                             0.0               13.0          1097.0   \n","10                            0.0                0.0             0.0   \n","11                            0.0                0.0           832.0   \n","12                            0.0                0.0             0.0   \n","13                            0.0                0.0             0.0   \n","14                            0.0              115.0          1354.0   \n","15                            0.0                0.0             0.0   \n","16                            0.0                0.0             0.0   \n","17                            0.0               22.0          1246.0   \n","18                            0.0               23.0          1623.0   \n","19                            0.0                0.0             0.0   \n","\n","    ARROND_VACANCIES  ARROND_TREES  ARROND_RUELLES_VERTES  \\\n","0               37.0       35069.0                   16.0   \n","1                7.0          12.0                    0.0   \n","2                2.0           0.0                    0.0   \n","3               12.0           0.0                    0.0   \n","4                0.0           0.0                    0.0   \n","5                7.0           0.0                    0.0   \n","6               17.0       23454.0                    0.0   \n","7                0.0           0.0                    0.0   \n","8              110.0       17806.0                  269.0   \n","9               50.0       21003.0                  104.0   \n","10               6.0           0.0                    0.0   \n","11              10.0           0.0                   16.0   \n","12               0.0       16164.0                    0.0   \n","13               8.0           0.0                    0.0   \n","14              21.0       23094.0                    0.0   \n","15               3.0           0.0                    0.0   \n","16               0.0           0.0                    0.0   \n","17              17.0       18115.0                  106.0   \n","18             189.0       18421.0                    1.0   \n","19              17.0           0.0                    0.0   \n","\n","    ARROND_AVG_CONSTRUCTION_YEAR  ARROND_EXTERMINATIONS  AVERAGE_TEMP  \\\n","0                         1969.0                  294.0      3.600000   \n","1                         1979.0                   38.0      3.566667   \n","2                            0.0                    NaN      3.683333   \n","3                            0.0                    NaN      3.533333   \n","4                            0.0                    NaN      4.133333   \n","5                            0.0                    NaN      3.683333   \n","6                         1978.0                   73.0      3.600000   \n","7                         1965.0                   46.0      3.600000   \n","8                         1936.0                  461.0      3.533333   \n","9                         1973.0                  125.0      3.600000   \n","10                           0.0                    NaN      3.766667   \n","11                        1938.0                    9.0      3.766667   \n","12                        1979.0                   12.0      3.766667   \n","13                           0.0                    NaN      3.566667   \n","14                        1984.0                   68.0      3.600000   \n","15                           0.0                    NaN      3.800000   \n","16                           0.0                    NaN      5.800000   \n","17                        1973.0                  115.0      4.066667   \n","18                        1981.0                  369.0      3.766667   \n","19                           0.0                    NaN      3.566667   \n","\n","    ARROND_AIDE_ALIMENTAIRE  Population  incidents_per_1000  \n","0                     33.50    126891.0           57.119890  \n","1                      8.50     41928.0           52.828659  \n","2                      0.00     19505.0           41.220200  \n","3                      1.50     18208.0           98.473199  \n","4                      0.00      7153.0           57.598211  \n","5                      0.00     21253.0           35.524397  \n","6                     16.00     74276.0           45.196295  \n","7                      8.50     41616.0           71.799308  \n","8                     19.50    100390.0           79.858552  \n","9                     16.50     71546.0           73.742767  \n","10                     1.50     19503.0           94.703379  \n","11                     1.00     23566.0           70.185861  \n","12                     4.00     68410.0           38.634703  \n","13                     1.75     30790.0           75.641442  \n","14                    18.00     93842.0           74.625434  \n","15                     0.00      5073.0           78.651685  \n","16                     0.00       920.0          111.956522  \n","17                     7.00     66158.0           51.150277  \n","18                    31.00     84013.0          205.611036  \n","19                     1.50     19931.0          108.173198  "],"text/html":["\n","  <div id=\"df-d0ff6654-bcd6-4890-b18f-6177866e92d9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>INCIDENT_NOM_ARROND</th>\n","      <th>NUMBER_OF_INCIDENTS</th>\n","      <th>ARROND_UNITS</th>\n","      <th>ARROND_DETERIOATION_LOGEMENTS</th>\n","      <th>ARROND_SALUBRITES</th>\n","      <th>ARROND_PERMITS</th>\n","      <th>ARROND_VACANCIES</th>\n","      <th>ARROND_TREES</th>\n","      <th>ARROND_RUELLES_VERTES</th>\n","      <th>ARROND_AVG_CONSTRUCTION_YEAR</th>\n","      <th>ARROND_EXTERMINATIONS</th>\n","      <th>AVERAGE_TEMP</th>\n","      <th>ARROND_AIDE_ALIMENTAIRE</th>\n","      <th>Population</th>\n","      <th>incidents_per_1000</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Ahuntsic-Cartierville</td>\n","      <td>7248</td>\n","      <td>66200.0</td>\n","      <td>0.0</td>\n","      <td>92.0</td>\n","      <td>0.0</td>\n","      <td>37.0</td>\n","      <td>35069.0</td>\n","      <td>16.0</td>\n","      <td>1969.0</td>\n","      <td>294.0</td>\n","      <td>3.600000</td>\n","      <td>33.50</td>\n","      <td>126891.0</td>\n","      <td>57.119890</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Anjou</td>\n","      <td>2215</td>\n","      <td>20250.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>481.0</td>\n","      <td>7.0</td>\n","      <td>12.0</td>\n","      <td>0.0</td>\n","      <td>1979.0</td>\n","      <td>38.0</td>\n","      <td>3.566667</td>\n","      <td>8.50</td>\n","      <td>41928.0</td>\n","      <td>52.828659</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Beaconsfield</td>\n","      <td>804</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>3.683333</td>\n","      <td>0.00</td>\n","      <td>19505.0</td>\n","      <td>41.220200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dorval</td>\n","      <td>1793</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>12.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>3.533333</td>\n","      <td>1.50</td>\n","      <td>18208.0</td>\n","      <td>98.473199</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Hampstead</td>\n","      <td>412</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>4.133333</td>\n","      <td>0.00</td>\n","      <td>7153.0</td>\n","      <td>57.598211</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Kirkland</td>\n","      <td>755</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>3.683333</td>\n","      <td>0.00</td>\n","      <td>21253.0</td>\n","      <td>35.524397</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>LaSalle</td>\n","      <td>3357</td>\n","      <td>40006.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>901.0</td>\n","      <td>17.0</td>\n","      <td>23454.0</td>\n","      <td>0.0</td>\n","      <td>1978.0</td>\n","      <td>73.0</td>\n","      <td>3.600000</td>\n","      <td>16.00</td>\n","      <td>74276.0</td>\n","      <td>45.196295</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Lachine</td>\n","      <td>2988</td>\n","      <td>23029.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>468.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1965.0</td>\n","      <td>46.0</td>\n","      <td>3.600000</td>\n","      <td>8.50</td>\n","      <td>41616.0</td>\n","      <td>71.799308</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Le Plateau-Mont-Royal</td>\n","      <td>8017</td>\n","      <td>66218.0</td>\n","      <td>0.0</td>\n","      <td>41.0</td>\n","      <td>1993.0</td>\n","      <td>110.0</td>\n","      <td>17806.0</td>\n","      <td>269.0</td>\n","      <td>1936.0</td>\n","      <td>461.0</td>\n","      <td>3.533333</td>\n","      <td>19.50</td>\n","      <td>100390.0</td>\n","      <td>79.858552</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Le Sud-Ouest</td>\n","      <td>5276</td>\n","      <td>49880.0</td>\n","      <td>0.0</td>\n","      <td>13.0</td>\n","      <td>1097.0</td>\n","      <td>50.0</td>\n","      <td>21003.0</td>\n","      <td>104.0</td>\n","      <td>1973.0</td>\n","      <td>125.0</td>\n","      <td>3.600000</td>\n","      <td>16.50</td>\n","      <td>71546.0</td>\n","      <td>73.742767</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Mont-Royal</td>\n","      <td>1847</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>3.766667</td>\n","      <td>1.50</td>\n","      <td>19503.0</td>\n","      <td>94.703379</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Outremont</td>\n","      <td>1654</td>\n","      <td>10921.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>832.0</td>\n","      <td>10.0</td>\n","      <td>0.0</td>\n","      <td>16.0</td>\n","      <td>1938.0</td>\n","      <td>9.0</td>\n","      <td>3.766667</td>\n","      <td>1.00</td>\n","      <td>23566.0</td>\n","      <td>70.185861</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Pierrefonds-Roxboro</td>\n","      <td>2643</td>\n","      <td>26990.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>16164.0</td>\n","      <td>0.0</td>\n","      <td>1979.0</td>\n","      <td>12.0</td>\n","      <td>3.766667</td>\n","      <td>4.00</td>\n","      <td>68410.0</td>\n","      <td>38.634703</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Pointe-Claire</td>\n","      <td>2329</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>3.566667</td>\n","      <td>1.75</td>\n","      <td>30790.0</td>\n","      <td>75.641442</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Saint-Laurent</td>\n","      <td>7003</td>\n","      <td>43782.0</td>\n","      <td>0.0</td>\n","      <td>115.0</td>\n","      <td>1354.0</td>\n","      <td>21.0</td>\n","      <td>23094.0</td>\n","      <td>0.0</td>\n","      <td>1984.0</td>\n","      <td>68.0</td>\n","      <td>3.600000</td>\n","      <td>18.00</td>\n","      <td>93842.0</td>\n","      <td>74.625434</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sainte-Anne-de-Bellevue</td>\n","      <td>399</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>3.800000</td>\n","      <td>0.00</td>\n","      <td>5073.0</td>\n","      <td>78.651685</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Senneville</td>\n","      <td>103</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>5.800000</td>\n","      <td>0.00</td>\n","      <td>920.0</td>\n","      <td>111.956522</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Verdun</td>\n","      <td>3384</td>\n","      <td>38340.0</td>\n","      <td>0.0</td>\n","      <td>22.0</td>\n","      <td>1246.0</td>\n","      <td>17.0</td>\n","      <td>18115.0</td>\n","      <td>106.0</td>\n","      <td>1973.0</td>\n","      <td>115.0</td>\n","      <td>4.066667</td>\n","      <td>7.00</td>\n","      <td>66158.0</td>\n","      <td>51.150277</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Ville-Marie</td>\n","      <td>17274</td>\n","      <td>78743.0</td>\n","      <td>0.0</td>\n","      <td>23.0</td>\n","      <td>1623.0</td>\n","      <td>189.0</td>\n","      <td>18421.0</td>\n","      <td>1.0</td>\n","      <td>1981.0</td>\n","      <td>369.0</td>\n","      <td>3.766667</td>\n","      <td>31.00</td>\n","      <td>84013.0</td>\n","      <td>205.611036</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Westmount</td>\n","      <td>2156</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>17.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>3.566667</td>\n","      <td>1.50</td>\n","      <td>19931.0</td>\n","      <td>108.173198</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d0ff6654-bcd6-4890-b18f-6177866e92d9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d0ff6654-bcd6-4890-b18f-6177866e92d9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d0ff6654-bcd6-4890-b18f-6177866e92d9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d96779af-d96b-4db5-b64d-b5f919a2a1f7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d96779af-d96b-4db5-b64d-b5f919a2a1f7')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d96779af-d96b-4db5-b64d-b5f919a2a1f7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["grouped2.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":580},"id":"BtSNz8IHppMU","executionInfo":{"status":"ok","timestamp":1697065791127,"user_tz":240,"elapsed":167,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"c10b2636-c38e-445a-838b-55d135952831"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-27-fb48b131d89d>:1: FutureWarning:\n","\n","The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["                               NUMBER_OF_INCIDENTS  ARROND_UNITS  \\\n","NUMBER_OF_INCIDENTS                       1.000000      0.868429   \n","ARROND_UNITS                              0.868429      1.000000   \n","ARROND_DETERIOATION_LOGEMENTS                  NaN           NaN   \n","ARROND_SALUBRITES                         0.510438      0.620116   \n","ARROND_PERMITS                            0.698752      0.770365   \n","ARROND_VACANCIES                          0.929296      0.760370   \n","ARROND_TREES                              0.635201      0.872265   \n","ARROND_RUELLES_VERTES                     0.280474      0.497072   \n","ARROND_AVG_CONSTRUCTION_YEAR              0.563422      0.810467   \n","ARROND_EXTERMINATIONS                     0.763139      0.892474   \n","AVERAGE_TEMP                             -0.241112     -0.240638   \n","ARROND_AIDE_ALIMENTAIRE                   0.865653      0.944704   \n","Population                                0.726560      0.929158   \n","incidents_per_1000                        0.639819      0.269901   \n","\n","                               ARROND_DETERIOATION_LOGEMENTS  \\\n","NUMBER_OF_INCIDENTS                                      NaN   \n","ARROND_UNITS                                             NaN   \n","ARROND_DETERIOATION_LOGEMENTS                            NaN   \n","ARROND_SALUBRITES                                        NaN   \n","ARROND_PERMITS                                           NaN   \n","ARROND_VACANCIES                                         NaN   \n","ARROND_TREES                                             NaN   \n","ARROND_RUELLES_VERTES                                    NaN   \n","ARROND_AVG_CONSTRUCTION_YEAR                             NaN   \n","ARROND_EXTERMINATIONS                                    NaN   \n","AVERAGE_TEMP                                             NaN   \n","ARROND_AIDE_ALIMENTAIRE                                  NaN   \n","Population                                               NaN   \n","incidents_per_1000                                       NaN   \n","\n","                               ARROND_SALUBRITES  ARROND_PERMITS  \\\n","NUMBER_OF_INCIDENTS                     0.510438        0.698752   \n","ARROND_UNITS                            0.620116        0.770365   \n","ARROND_DETERIOATION_LOGEMENTS                NaN             NaN   \n","ARROND_SALUBRITES                       1.000000        0.411213   \n","ARROND_PERMITS                          0.411213        1.000000   \n","ARROND_VACANCIES                        0.274321        0.699673   \n","ARROND_TREES                            0.721788        0.538275   \n","ARROND_RUELLES_VERTES                   0.203778        0.662734   \n","ARROND_AVG_CONSTRUCTION_YEAR            0.454646        0.705655   \n","ARROND_EXTERMINATIONS                   0.339634        0.544490   \n","AVERAGE_TEMP                           -0.169249       -0.186544   \n","ARROND_AIDE_ALIMENTAIRE                 0.694929        0.603235   \n","Population                              0.750831        0.627004   \n","incidents_per_1000                      0.019742        0.288635   \n","\n","                               ARROND_VACANCIES  ARROND_TREES  \\\n","NUMBER_OF_INCIDENTS                    0.929296      0.635201   \n","ARROND_UNITS                           0.760370      0.872265   \n","ARROND_DETERIOATION_LOGEMENTS               NaN           NaN   \n","ARROND_SALUBRITES                      0.274321      0.721788   \n","ARROND_PERMITS                         0.699673      0.538275   \n","ARROND_VACANCIES                       1.000000      0.452082   \n","ARROND_TREES                           0.452082      1.000000   \n","ARROND_RUELLES_VERTES                  0.424956      0.352408   \n","ARROND_AVG_CONSTRUCTION_YEAR           0.392923      0.702749   \n","ARROND_EXTERMINATIONS                  0.835105      0.464517   \n","AVERAGE_TEMP                          -0.156736     -0.198776   \n","ARROND_AIDE_ALIMENTAIRE                0.720398      0.852923   \n","Population                             0.542193      0.936014   \n","incidents_per_1000                     0.708854     -0.010347   \n","\n","                               ARROND_RUELLES_VERTES  \\\n","NUMBER_OF_INCIDENTS                         0.280474   \n","ARROND_UNITS                                0.497072   \n","ARROND_DETERIOATION_LOGEMENTS                    NaN   \n","ARROND_SALUBRITES                           0.203778   \n","ARROND_PERMITS                              0.662734   \n","ARROND_VACANCIES                            0.424956   \n","ARROND_TREES                                0.352408   \n","ARROND_RUELLES_VERTES                       1.000000   \n","ARROND_AVG_CONSTRUCTION_YEAR                0.355359   \n","ARROND_EXTERMINATIONS                       0.605850   \n","AVERAGE_TEMP                               -0.109484   \n","ARROND_AIDE_ALIMENTAIRE                     0.300985   \n","Population                                  0.442180   \n","incidents_per_1000                         -0.045982   \n","\n","                               ARROND_AVG_CONSTRUCTION_YEAR  \\\n","NUMBER_OF_INCIDENTS                                0.563422   \n","ARROND_UNITS                                       0.810467   \n","ARROND_DETERIOATION_LOGEMENTS                           NaN   \n","ARROND_SALUBRITES                                  0.454646   \n","ARROND_PERMITS                                     0.705655   \n","ARROND_VACANCIES                                   0.392923   \n","ARROND_TREES                                       0.702749   \n","ARROND_RUELLES_VERTES                              0.355359   \n","ARROND_AVG_CONSTRUCTION_YEAR                       1.000000   \n","ARROND_EXTERMINATIONS                             -0.291865   \n","AVERAGE_TEMP                                      -0.275574   \n","ARROND_AIDE_ALIMENTAIRE                            0.690416   \n","Population                                         0.791892   \n","incidents_per_1000                                -0.044827   \n","\n","                               ARROND_EXTERMINATIONS  AVERAGE_TEMP  \\\n","NUMBER_OF_INCIDENTS                         0.763139     -0.241112   \n","ARROND_UNITS                                0.892474     -0.240638   \n","ARROND_DETERIOATION_LOGEMENTS                    NaN           NaN   \n","ARROND_SALUBRITES                           0.339634     -0.169249   \n","ARROND_PERMITS                              0.544490     -0.186544   \n","ARROND_VACANCIES                            0.835105     -0.156736   \n","ARROND_TREES                                0.464517     -0.198776   \n","ARROND_RUELLES_VERTES                       0.605850     -0.109484   \n","ARROND_AVG_CONSTRUCTION_YEAR               -0.291865     -0.275574   \n","ARROND_EXTERMINATIONS                       1.000000     -0.167274   \n","AVERAGE_TEMP                               -0.167274      1.000000   \n","ARROND_AIDE_ALIMENTAIRE                     0.759903     -0.263722   \n","Population                                  0.687079     -0.361534   \n","incidents_per_1000                          0.554106      0.187030   \n","\n","                               ARROND_AIDE_ALIMENTAIRE  Population  \\\n","NUMBER_OF_INCIDENTS                           0.865653    0.726560   \n","ARROND_UNITS                                  0.944704    0.929158   \n","ARROND_DETERIOATION_LOGEMENTS                      NaN         NaN   \n","ARROND_SALUBRITES                             0.694929    0.750831   \n","ARROND_PERMITS                                0.603235    0.627004   \n","ARROND_VACANCIES                              0.720398    0.542193   \n","ARROND_TREES                                  0.852923    0.936014   \n","ARROND_RUELLES_VERTES                         0.300985    0.442180   \n","ARROND_AVG_CONSTRUCTION_YEAR                  0.690416    0.791892   \n","ARROND_EXTERMINATIONS                         0.759903    0.687079   \n","AVERAGE_TEMP                                 -0.263722   -0.361534   \n","ARROND_AIDE_ALIMENTAIRE                       1.000000    0.903739   \n","Population                                    0.903739    1.000000   \n","incidents_per_1000                            0.322515    0.018161   \n","\n","                               incidents_per_1000  \n","NUMBER_OF_INCIDENTS                      0.639819  \n","ARROND_UNITS                             0.269901  \n","ARROND_DETERIOATION_LOGEMENTS                 NaN  \n","ARROND_SALUBRITES                        0.019742  \n","ARROND_PERMITS                           0.288635  \n","ARROND_VACANCIES                         0.708854  \n","ARROND_TREES                            -0.010347  \n","ARROND_RUELLES_VERTES                   -0.045982  \n","ARROND_AVG_CONSTRUCTION_YEAR            -0.044827  \n","ARROND_EXTERMINATIONS                    0.554106  \n","AVERAGE_TEMP                             0.187030  \n","ARROND_AIDE_ALIMENTAIRE                  0.322515  \n","Population                               0.018161  \n","incidents_per_1000                       1.000000  "],"text/html":["\n","  <div id=\"df-74a9a99b-7a66-4fbe-a66c-7a093ca7ffff\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>NUMBER_OF_INCIDENTS</th>\n","      <th>ARROND_UNITS</th>\n","      <th>ARROND_DETERIOATION_LOGEMENTS</th>\n","      <th>ARROND_SALUBRITES</th>\n","      <th>ARROND_PERMITS</th>\n","      <th>ARROND_VACANCIES</th>\n","      <th>ARROND_TREES</th>\n","      <th>ARROND_RUELLES_VERTES</th>\n","      <th>ARROND_AVG_CONSTRUCTION_YEAR</th>\n","      <th>ARROND_EXTERMINATIONS</th>\n","      <th>AVERAGE_TEMP</th>\n","      <th>ARROND_AIDE_ALIMENTAIRE</th>\n","      <th>Population</th>\n","      <th>incidents_per_1000</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>NUMBER_OF_INCIDENTS</th>\n","      <td>1.000000</td>\n","      <td>0.868429</td>\n","      <td>NaN</td>\n","      <td>0.510438</td>\n","      <td>0.698752</td>\n","      <td>0.929296</td>\n","      <td>0.635201</td>\n","      <td>0.280474</td>\n","      <td>0.563422</td>\n","      <td>0.763139</td>\n","      <td>-0.241112</td>\n","      <td>0.865653</td>\n","      <td>0.726560</td>\n","      <td>0.639819</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_UNITS</th>\n","      <td>0.868429</td>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>0.620116</td>\n","      <td>0.770365</td>\n","      <td>0.760370</td>\n","      <td>0.872265</td>\n","      <td>0.497072</td>\n","      <td>0.810467</td>\n","      <td>0.892474</td>\n","      <td>-0.240638</td>\n","      <td>0.944704</td>\n","      <td>0.929158</td>\n","      <td>0.269901</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_DETERIOATION_LOGEMENTS</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_SALUBRITES</th>\n","      <td>0.510438</td>\n","      <td>0.620116</td>\n","      <td>NaN</td>\n","      <td>1.000000</td>\n","      <td>0.411213</td>\n","      <td>0.274321</td>\n","      <td>0.721788</td>\n","      <td>0.203778</td>\n","      <td>0.454646</td>\n","      <td>0.339634</td>\n","      <td>-0.169249</td>\n","      <td>0.694929</td>\n","      <td>0.750831</td>\n","      <td>0.019742</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_PERMITS</th>\n","      <td>0.698752</td>\n","      <td>0.770365</td>\n","      <td>NaN</td>\n","      <td>0.411213</td>\n","      <td>1.000000</td>\n","      <td>0.699673</td>\n","      <td>0.538275</td>\n","      <td>0.662734</td>\n","      <td>0.705655</td>\n","      <td>0.544490</td>\n","      <td>-0.186544</td>\n","      <td>0.603235</td>\n","      <td>0.627004</td>\n","      <td>0.288635</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_VACANCIES</th>\n","      <td>0.929296</td>\n","      <td>0.760370</td>\n","      <td>NaN</td>\n","      <td>0.274321</td>\n","      <td>0.699673</td>\n","      <td>1.000000</td>\n","      <td>0.452082</td>\n","      <td>0.424956</td>\n","      <td>0.392923</td>\n","      <td>0.835105</td>\n","      <td>-0.156736</td>\n","      <td>0.720398</td>\n","      <td>0.542193</td>\n","      <td>0.708854</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_TREES</th>\n","      <td>0.635201</td>\n","      <td>0.872265</td>\n","      <td>NaN</td>\n","      <td>0.721788</td>\n","      <td>0.538275</td>\n","      <td>0.452082</td>\n","      <td>1.000000</td>\n","      <td>0.352408</td>\n","      <td>0.702749</td>\n","      <td>0.464517</td>\n","      <td>-0.198776</td>\n","      <td>0.852923</td>\n","      <td>0.936014</td>\n","      <td>-0.010347</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_RUELLES_VERTES</th>\n","      <td>0.280474</td>\n","      <td>0.497072</td>\n","      <td>NaN</td>\n","      <td>0.203778</td>\n","      <td>0.662734</td>\n","      <td>0.424956</td>\n","      <td>0.352408</td>\n","      <td>1.000000</td>\n","      <td>0.355359</td>\n","      <td>0.605850</td>\n","      <td>-0.109484</td>\n","      <td>0.300985</td>\n","      <td>0.442180</td>\n","      <td>-0.045982</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_AVG_CONSTRUCTION_YEAR</th>\n","      <td>0.563422</td>\n","      <td>0.810467</td>\n","      <td>NaN</td>\n","      <td>0.454646</td>\n","      <td>0.705655</td>\n","      <td>0.392923</td>\n","      <td>0.702749</td>\n","      <td>0.355359</td>\n","      <td>1.000000</td>\n","      <td>-0.291865</td>\n","      <td>-0.275574</td>\n","      <td>0.690416</td>\n","      <td>0.791892</td>\n","      <td>-0.044827</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_EXTERMINATIONS</th>\n","      <td>0.763139</td>\n","      <td>0.892474</td>\n","      <td>NaN</td>\n","      <td>0.339634</td>\n","      <td>0.544490</td>\n","      <td>0.835105</td>\n","      <td>0.464517</td>\n","      <td>0.605850</td>\n","      <td>-0.291865</td>\n","      <td>1.000000</td>\n","      <td>-0.167274</td>\n","      <td>0.759903</td>\n","      <td>0.687079</td>\n","      <td>0.554106</td>\n","    </tr>\n","    <tr>\n","      <th>AVERAGE_TEMP</th>\n","      <td>-0.241112</td>\n","      <td>-0.240638</td>\n","      <td>NaN</td>\n","      <td>-0.169249</td>\n","      <td>-0.186544</td>\n","      <td>-0.156736</td>\n","      <td>-0.198776</td>\n","      <td>-0.109484</td>\n","      <td>-0.275574</td>\n","      <td>-0.167274</td>\n","      <td>1.000000</td>\n","      <td>-0.263722</td>\n","      <td>-0.361534</td>\n","      <td>0.187030</td>\n","    </tr>\n","    <tr>\n","      <th>ARROND_AIDE_ALIMENTAIRE</th>\n","      <td>0.865653</td>\n","      <td>0.944704</td>\n","      <td>NaN</td>\n","      <td>0.694929</td>\n","      <td>0.603235</td>\n","      <td>0.720398</td>\n","      <td>0.852923</td>\n","      <td>0.300985</td>\n","      <td>0.690416</td>\n","      <td>0.759903</td>\n","      <td>-0.263722</td>\n","      <td>1.000000</td>\n","      <td>0.903739</td>\n","      <td>0.322515</td>\n","    </tr>\n","    <tr>\n","      <th>Population</th>\n","      <td>0.726560</td>\n","      <td>0.929158</td>\n","      <td>NaN</td>\n","      <td>0.750831</td>\n","      <td>0.627004</td>\n","      <td>0.542193</td>\n","      <td>0.936014</td>\n","      <td>0.442180</td>\n","      <td>0.791892</td>\n","      <td>0.687079</td>\n","      <td>-0.361534</td>\n","      <td>0.903739</td>\n","      <td>1.000000</td>\n","      <td>0.018161</td>\n","    </tr>\n","    <tr>\n","      <th>incidents_per_1000</th>\n","      <td>0.639819</td>\n","      <td>0.269901</td>\n","      <td>NaN</td>\n","      <td>0.019742</td>\n","      <td>0.288635</td>\n","      <td>0.708854</td>\n","      <td>-0.010347</td>\n","      <td>-0.045982</td>\n","      <td>-0.044827</td>\n","      <td>0.554106</td>\n","      <td>0.187030</td>\n","      <td>0.322515</td>\n","      <td>0.018161</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-74a9a99b-7a66-4fbe-a66c-7a093ca7ffff')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-74a9a99b-7a66-4fbe-a66c-7a093ca7ffff button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-74a9a99b-7a66-4fbe-a66c-7a093ca7ffff');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-28751a9b-6707-461c-b4c2-ef1e1bc1650a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-28751a9b-6707-461c-b4c2-ef1e1bc1650a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-28751a9b-6707-461c-b4c2-ef1e1bc1650a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["import plotly.express as px\n","\n","fig = px.scatter(x = grouped2['ARROND_VACANCIES'],\n","                 y = grouped2['ARROND_PERMITS'],\n","                 size = grouped2['NUMBER_OF_INCIDENTS'],\n","                 text = grouped2['INCIDENT_NOM_ARROND'],\n","                 width=1000, height=700)\n","fig.data[0].text = [e if e in ['Ville-Marie', 'Le Plateau-Mont-Royal', 'Le Sud-Ouest', 'Saint-Laurent', 'Verdun', 'LaSalle', 'Outremont', 'Anjou', 'Lachine', 'Cote-des-Neiges-Notre-Dame-de-Grace'] else '' for e in fig.data[0].text]\n","fig.update_traces(textposition='top center')\n","fig.update_layout(\n","    title=\"Fire incidents per Neighborhood by Vacancies and Construction Permits<br><sup>Fire Incidents happen more in neighborhoods with higher vacancies and construction</sup>\",\n","    xaxis_title=\"Vacancies\",\n","    yaxis_title=\"Construction Permits\",\n","    font=dict(\n","        size=18\n","    )\n",")\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":717},"id":"Z5UcNXYf8Mt-","executionInfo":{"status":"ok","timestamp":1697034659539,"user_tz":240,"elapsed":390,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"cb1b1525-89bd-4dbb-908f-8fcf2e8e9be1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"915b2693-779f-4917-89a7-bd8cec8962fa\" class=\"plotly-graph-div\" style=\"height:700px; width:1000px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"915b2693-779f-4917-89a7-bd8cec8962fa\")) {                    Plotly.newPlot(                        \"915b2693-779f-4917-89a7-bd8cec8962fa\",                        [{\"hovertemplate\":\"x=%{x}\\u003cbr\\u003ey=%{y}\\u003cbr\\u003esize=%{marker.size}\\u003cbr\\u003etext=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"size\":[7248,2215,414,804,1879,11577,1818,1793,412,755,632,3357,2988,8017,5276,6479,1847,323,3829,234,1654,2643,2329,3890,7049,7003,2885,399,103,3384,17274,5653,2156],\"sizemode\":\"area\",\"sizeref\":43.185,\"symbol\":\"circle\"},\"mode\":\"markers+text\",\"name\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"text\":[\"\",\"Anjou\",\"\",\"\",\"\",\"Cote-des-Neiges-Notre-Dame-de-Grace\",\"\",\"\",\"\",\"\",\"\",\"LaSalle\",\"Lachine\",\"Le Plateau-Mont-Royal\",\"Le Sud-Ouest\",\"\",\"\",\"\",\"\",\"\",\"Outremont\",\"\",\"\",\"\",\"\",\"Saint-Laurent\",\"\",\"\",\"\",\"Verdun\",\"Ville-Marie\",\"\",\"\"],\"x\":[37.0,7.0,0.0,2.0,2.0,77.0,4.0,12.0,0.0,7.0,3.0,17.0,0.0,110.0,50.0,32.0,6.0,0.0,14.0,1.0,10.0,0.0,8.0,11.0,53.0,21.0,24.0,3.0,0.0,17.0,189.0,50.0,17.0],\"xaxis\":\"x\",\"y\":[0.0,481.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,901.0,468.0,1993.0,1097.0,0.0,0.0,0.0,0.0,0.0,832.0,0.0,0.0,0.0,0.0,1354.0,0.0,0.0,0.0,1246.0,1623.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"scatter\",\"textposition\":\"top center\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Vacancies\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Construction Permits\"}},\"legend\":{\"tracegroupgap\":0,\"itemsizing\":\"constant\"},\"margin\":{\"t\":60},\"height\":700,\"width\":1000,\"font\":{\"size\":18},\"title\":{\"text\":\"Fire incidents per Neighborhood by Vacancies and Construction Permits\\u003cbr\\u003e\\u003csup\\u003eFire Incidents happen more in neighborhoods with higher vacancies and construction\\u003c\\u002fsup\\u003e\"}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('915b2693-779f-4917-89a7-bd8cec8962fa');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["import plotly.express as px\n","\n","fig = px.scatter(x = grouped2['NUMBER_OF_INCIDENTS'],\n","                 y = grouped2['ARROND_AIDE_ALIMENTAIRE'],\n","                 size = grouped2['NUMBER_OF_INCIDENTS'],\n","                 text = grouped2['INCIDENT_NOM_ARROND'],\n","                 width=1000, height=700)\n","fig.data[0].text = [e if e in ['Ville-Marie', 'Le Plateau-Mont-Royal', 'Le Sud-Ouest', 'Saint-Laurent', 'Verdun', 'LaSalle', 'Outremont', 'Anjou', 'Lachine', 'Cote-des-Neiges-Notre-Dame-de-Grace'] else '' for e in fig.data[0].text]\n","fig.update_traces(textposition='top center')\n","fig.update_layout(\n","    title=\"Fire incidents per Neighborhood by Aide Alimentaire Index<br><sup>Fire Incidents happen more in neighborhoods with higher aide alimentaire requests</sup>\",\n","    xaxis_title=\"Fire Incidents\",\n","    yaxis_title=\"Aide Alimentaire Index\",\n","    font=dict(\n","        size=18\n","    )\n",")\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":717},"id":"Fywv--8ZZ6Fe","executionInfo":{"status":"ok","timestamp":1697064954604,"user_tz":240,"elapsed":354,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"82ee25bd-003f-4c20-e315-778d95f2e322"},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"5bb414bc-45d2-40b8-8a7b-611ca1993ab5\" class=\"plotly-graph-div\" style=\"height:700px; width:1000px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"5bb414bc-45d2-40b8-8a7b-611ca1993ab5\")) {                    Plotly.newPlot(                        \"5bb414bc-45d2-40b8-8a7b-611ca1993ab5\",                        [{\"hovertemplate\":\"x=%{x}\\u003cbr\\u003ey=%{y}\\u003cbr\\u003esize=%{marker.size}\\u003cbr\\u003etext=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"size\":[7248,2215,804,1793,412,755,3357,2988,8017,5276,1847,1654,2643,2329,7003,399,103,3384,17274,2156],\"sizemode\":\"area\",\"sizeref\":43.185,\"symbol\":\"circle\"},\"mode\":\"markers+text\",\"name\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"text\":[\"\",\"Anjou\",\"\",\"\",\"\",\"\",\"LaSalle\",\"Lachine\",\"Le Plateau-Mont-Royal\",\"Le Sud-Ouest\",\"\",\"Outremont\",\"\",\"\",\"Saint-Laurent\",\"\",\"\",\"Verdun\",\"Ville-Marie\",\"\"],\"x\":[7248,2215,804,1793,412,755,3357,2988,8017,5276,1847,1654,2643,2329,7003,399,103,3384,17274,2156],\"xaxis\":\"x\",\"y\":[33.5,8.5,0.0,1.5,0.0,0.0,16.0,8.5,19.5,16.5,1.5,1.0,4.0,1.75,18.0,0.0,0.0,7.0,31.0,1.5],\"yaxis\":\"y\",\"type\":\"scatter\",\"textposition\":\"top center\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Fire Incidents\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Aide Alimentaire Index\"}},\"legend\":{\"tracegroupgap\":0,\"itemsizing\":\"constant\"},\"margin\":{\"t\":60},\"height\":700,\"width\":1000,\"font\":{\"size\":18},\"title\":{\"text\":\"Fire incidents per Neighborhood by Aide Alimentaire Index\\u003cbr\\u003e\\u003csup\\u003eFire Incidents happen more in neighborhoods with higher aide alimentaire requests\\u003c\\u002fsup\\u003e\"}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('5bb414bc-45d2-40b8-8a7b-611ca1993ab5');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["Linear Regression"],"metadata":{"id":"Wp_MLkLW9N-3"}},{"cell_type":"code","source":["# test classification dataset\n","from sklearn.datasets import make_classification\n","# define dataset\n","y = dataset[['NUMBER_OF_INCIDENTS']].fillna(0)\n","X = dataset[['INCIDENT_YEAR', \t'INCIDENT_MONTH', \t'CASERNE', \t'NO_CIVIQUE', \t'CASERNE_LATITUDE', \t'CASERNE_LONGITUDE', \t'MTM8_X', \t'MTM8_Y']].fillna(0)\n","x_Arron = pd.DataFrame(grouped2[['ARROND_UNITS', 'ARROND_SALUBRITES', \t'ARROND_PERMITS', \t'ARROND_VACANCIES', \t'ARROND_TREES', \t'ARROND_RUELLES_VERTES', \t'ARROND_AVG_CONSTRUCTION_YEAR',\n","             'ARROND_EXTERMINATIONS', \t'AVERAGE_TEMP', \t'ARROND_AIDE_ALIMENTAIRE', 'ARROND_DETERIOATION_LOGEMENTS']]).fillna(0)\n","y_Arron = grouped2['NUMBER_OF_INCIDENTS'].fillna(0)\n","\n","X = X.fillna(0)\n","#X = dataset.drop(columns=['NUMBER_OF_INCIDENTS', 'ABOVE_AVERAGE_NUMBER_OF_INCIDENTS', 'INCIDENT_DESCRIPTION_GROUPE','INCIDENT_NOM_VILLE','INCIDENT_NOM_ARROND','CASERNE_RUE'])\n","# summarize the dataset\n","print(y_Arron.shape, x_Arron.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RGKeincw9Nmk","executionInfo":{"status":"ok","timestamp":1697038620833,"user_tz":240,"elapsed":4,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"303c57ab-fcfc-49da-eeac-ba0855e52ccc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(33,) (33, 11)\n"]}]},{"cell_type":"code","source":["from sklearn.datasets import make_regression\n","from sklearn.linear_model import LinearRegression\n","from matplotlib import pyplot\n","# define the model\n","model = LinearRegression()\n","# fit the model\n","model.fit(x_Arron, y_Arron)\n","# get importance\n","importance = model.coef_\n","# summarize feature importance\n","for i,v in enumerate(importance):\n","\tprint('Feature: %0s, Score: %.5f' % (x_Arron.columns[i],v))\n","# plot feature importance\n","pyplot.bar([x for x in range(len(importance))], importance)\n","pyplot.show()\n","\n","model = LinearRegression()\n","# fit the model\n","model.fit(X, y)\n","# get importance\n","importance = model.coef_[0]\n","print(importance)\n","# summarize feature importance\n","for i,v in enumerate(importance):\n","\tprint('Feature: %0s, Score: %.5f' % (X.columns[i],v))\n","# plot feature importance\n","pyplot.bar([x for x in range(len(importance))], importance)\n","pyplot.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"rVIXWv8hBIva","executionInfo":{"status":"ok","timestamp":1697038695151,"user_tz":240,"elapsed":821,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"1d871523-141e-45fc-bff5-d7102dd90af7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature: ARROND_UNITS, Score: 0.13371\n","Feature: ARROND_SALUBRITES, Score: 3.94754\n","Feature: ARROND_PERMITS, Score: 0.32815\n","Feature: ARROND_VACANCIES, Score: 49.12914\n","Feature: ARROND_TREES, Score: -0.07001\n","Feature: ARROND_RUELLES_VERTES, Score: -5.13244\n","Feature: ARROND_AVG_CONSTRUCTION_YEAR, Score: -0.83436\n","Feature: ARROND_EXTERMINATIONS, Score: -9.33227\n","Feature: AVERAGE_TEMP, Score: -368.03347\n","Feature: ARROND_AIDE_ALIMENTAIRE, Score: 56.27797\n","Feature: ARROND_DETERIOATION_LOGEMENTS, Score: -129.16440\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["[ 2.57819379e-01  1.67795667e-01 -8.27172774e-02 -1.76635591e-04\n","  5.19496776e+04 -9.90667541e+02  1.18207317e-02 -4.67823813e-01]\n","Feature: INCIDENT_YEAR, Score: 0.25782\n","Feature: INCIDENT_MONTH, Score: 0.16780\n","Feature: CASERNE, Score: -0.08272\n","Feature: NO_CIVIQUE, Score: -0.00018\n","Feature: CASERNE_LATITUDE, Score: 51949.67757\n","Feature: CASERNE_LONGITUDE, Score: -990.66754\n","Feature: MTM8_X, Score: 0.01182\n","Feature: MTM8_Y, Score: -0.46782\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Logistic Regression (classification, NA)"],"metadata":{"id":"iYzeaOHLBK6q"}},{"cell_type":"code","source":["# logistic regression for feature importance\n","from sklearn.datasets import make_classification\n","from sklearn.linear_model import LogisticRegression\n","from matplotlib import pyplot\n","# define the model\n","model = LogisticRegression()\n","# fit the model\n","model.fit(x_Arron, y_Arron)\n","# get importance\n","importance = model.coef_[0]\n","# summarize feature importance\n","for i,v in enumerate(importance):\n","\tprint('Feature: %0s, Score: %.5f' % (x_Arron.columns[i],v))\n","# # plot feature importance\n","pyplot.bar([x for x in range(len(importance))], importance)\n","pyplot.show()\n","\n","model = LogisticRegression()\n","# fit the model\n","model.fit(X, y)\n","# get importance\n","importance = model.coef_[0]\n","# summarize feature importance\n","for i,v in enumerate(importance):\n","\tprint('Feature: %0s, Score: %.5f' % (X.columns[i],v))\n","# # plot feature importance\n","pyplot.bar([x for x in range(len(importance))], importance)\n","pyplot.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"wTFbPoXwHAH4","executionInfo":{"status":"ok","timestamp":1697038777835,"user_tz":240,"elapsed":4942,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"291ecef9-82ee-409d-ad81-5fa936269715"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning:\n","\n","lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","\n"]},{"output_type":"stream","name":"stdout","text":["Feature: ARROND_UNITS, Score: -0.11297\n","Feature: ARROND_SALUBRITES, Score: -0.00008\n","Feature: ARROND_PERMITS, Score: -0.00158\n","Feature: ARROND_VACANCIES, Score: -0.00023\n","Feature: ARROND_TREES, Score: -0.03725\n","Feature: ARROND_RUELLES_VERTES, Score: -0.00013\n","Feature: ARROND_AVG_CONSTRUCTION_YEAR, Score: -0.00662\n","Feature: ARROND_EXTERMINATIONS, Score: -0.00039\n","Feature: AVERAGE_TEMP, Score: 0.00032\n","Feature: ARROND_AIDE_ALIMENTAIRE, Score: -0.00007\n","Feature: ARROND_DETERIOATION_LOGEMENTS, Score: -0.00000\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/utils/validation.py:1143: DataConversionWarning:\n","\n","A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning:\n","\n","lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","\n"]},{"output_type":"stream","name":"stdout","text":["Feature: INCIDENT_YEAR, Score: 0.00000\n","Feature: INCIDENT_MONTH, Score: 0.00000\n","Feature: CASERNE, Score: -0.00000\n","Feature: NO_CIVIQUE, Score: -0.00001\n","Feature: CASERNE_LATITUDE, Score: 0.00000\n","Feature: CASERNE_LONGITUDE, Score: -0.00000\n","Feature: MTM8_X, Score: -0.00004\n","Feature: MTM8_Y, Score: 0.00000\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["CART Regression Feature Importance"],"metadata":{"id":"nlhuAImMIcZT"}},{"cell_type":"code","source":["from sklearn.datasets import make_regression\n","from sklearn.tree import DecisionTreeRegressor\n","from matplotlib import pyplot\n","# define the model\n","model = DecisionTreeRegressor()\n","# fit the model\n","model.fit(x_Arron, y_Arron)\n","# get importance\n","importance = model.feature_importances_\n","# summarize feature importance\n","for i,v in enumerate(importance):\n","\tprint('Feature: %0s, Score: %.5f' % (x_Arron.columns[i],v))\n","# plot feature importance\n","pyplot.bar([x for x in range(len(importance))], importance)\n","pyplot.show()\n","\n","# define the model\n","model = DecisionTreeRegressor()\n","# fit the model\n","model.fit(X, y)\n","# get importance\n","importance = model.feature_importances_\n","# summarize feature importance\n","for i,v in enumerate(importance):\n","\tprint('Feature: %0s, Score: %.5f' % (X.columns[i],v))\n","# plot feature importance\n","pyplot.bar([x for x in range(len(importance))], importance)\n","pyplot.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"qVzJQTVoIQXK","executionInfo":{"status":"ok","timestamp":1697038786021,"user_tz":240,"elapsed":981,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"5dc15f48-6191-463d-84d8-66aae564cdae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature: ARROND_UNITS, Score: 0.62667\n","Feature: ARROND_SALUBRITES, Score: 0.06152\n","Feature: ARROND_PERMITS, Score: 0.00000\n","Feature: ARROND_VACANCIES, Score: 0.23733\n","Feature: ARROND_TREES, Score: 0.00000\n","Feature: ARROND_RUELLES_VERTES, Score: 0.00000\n","Feature: ARROND_AVG_CONSTRUCTION_YEAR, Score: 0.00009\n","Feature: ARROND_EXTERMINATIONS, Score: 0.00599\n","Feature: AVERAGE_TEMP, Score: 0.01628\n","Feature: ARROND_AIDE_ALIMENTAIRE, Score: 0.05212\n","Feature: ARROND_DETERIOATION_LOGEMENTS, Score: 0.00000\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Feature: INCIDENT_YEAR, Score: 0.13289\n","Feature: INCIDENT_MONTH, Score: 0.13482\n","Feature: CASERNE, Score: 0.06661\n","Feature: NO_CIVIQUE, Score: 0.04069\n","Feature: CASERNE_LATITUDE, Score: 0.26553\n","Feature: CASERNE_LONGITUDE, Score: 0.11169\n","Feature: MTM8_X, Score: 0.12111\n","Feature: MTM8_Y, Score: 0.12666\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Random Forest Feature Importance"],"metadata":{"id":"esmUkjovIepp"}},{"cell_type":"code","source":["# random forest for feature importance on a regression problem\n","from sklearn.datasets import make_regression\n","from sklearn.ensemble import RandomForestRegressor\n","from matplotlib import pyplot\n","# define the model\n","model = RandomForestRegressor()\n","# fit the model\n","model.fit(x_Arron, y_Arron)\n","# get importance\n","importance = model.feature_importances_\n","# summarize feature importance\n","for i,v in enumerate(importance):\n","\tprint('Feature: %0s, Score: %.5f' % (x_Arron.columns[i],v))\n","# plot feature importance\n","pyplot.bar([x for x in range(len(importance))], importance)\n","pyplot.show()\n","\n","# define the model\n","model = RandomForestRegressor()\n","# fit the model\n","model.fit(X, y)\n","# get importance\n","importance = model.feature_importances_\n","# summarize feature importance\n","for i,v in enumerate(importance):\n","\tprint('Feature: %0s, Score: %.5f' % (X.columns[i],v))\n","# plot feature importance\n","pyplot.bar([x for x in range(len(importance))], importance)\n","pyplot.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"VswdUSp0IgqV","executionInfo":{"status":"ok","timestamp":1697038800618,"user_tz":240,"elapsed":3592,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"fd426008-9770-4c8e-8058-1e18b8c99592"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature: ARROND_UNITS, Score: 0.33797\n","Feature: ARROND_SALUBRITES, Score: 0.07818\n","Feature: ARROND_PERMITS, Score: 0.02342\n","Feature: ARROND_VACANCIES, Score: 0.36542\n","Feature: ARROND_TREES, Score: 0.02385\n","Feature: ARROND_RUELLES_VERTES, Score: 0.00948\n","Feature: ARROND_AVG_CONSTRUCTION_YEAR, Score: 0.01167\n","Feature: ARROND_EXTERMINATIONS, Score: 0.03971\n","Feature: AVERAGE_TEMP, Score: 0.02744\n","Feature: ARROND_AIDE_ALIMENTAIRE, Score: 0.08286\n","Feature: ARROND_DETERIOATION_LOGEMENTS, Score: 0.00000\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["<ipython-input-117-599e6bb380c1>:21: DataConversionWarning:\n","\n","A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","\n"]},{"output_type":"stream","name":"stdout","text":["Feature: INCIDENT_YEAR, Score: 0.13585\n","Feature: INCIDENT_MONTH, Score: 0.14581\n","Feature: CASERNE, Score: 0.05132\n","Feature: NO_CIVIQUE, Score: 0.09649\n","Feature: CASERNE_LATITUDE, Score: 0.17691\n","Feature: CASERNE_LONGITUDE, Score: 0.11305\n","Feature: MTM8_X, Score: 0.12375\n","Feature: MTM8_Y, Score: 0.15681\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["XGBoost Regression Feature Importance"],"metadata":{"id":"NISI7VajVlY7"}},{"cell_type":"code","source":["# xgboost for feature importance on a regression problem\n","from sklearn.datasets import make_regression\n","from xgboost import XGBRegressor\n","from matplotlib import pyplot\n","\n","# define the model\n","model = XGBRegressor()\n","# fit the model\n","model.fit(x_Arron, y_Arron)\n","# get importance\n","importance = model.feature_importances_\n","# summarize feature importance\n","for i,v in enumerate(importance):\n","\tprint('Feature: %0s, Score: %.5f' % (x_Arron.columns[i],v))\n","# plot feature importance\n","pyplot.bar([x for x in range(len(importance))], importance)\n","pyplot.show()\n","\n","# define the model\n","model = XGBRegressor()\n","# fit the model\n","model.fit(X, y)\n","# get importance\n","importance = model.feature_importances_\n","# summarize feature importance\n","for i,v in enumerate(importance):\n","\tprint('Feature: %0s, Score: %.5f' % (X.columns[i],v))\n","# plot feature importance\n","pyplot.bar([x for x in range(len(importance))], importance)\n","pyplot.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"xmvIl9XfVlCY","executionInfo":{"status":"ok","timestamp":1697038822858,"user_tz":240,"elapsed":1992,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"5f9c3a6a-21b7-4139-95cb-74da8b942dba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature: ARROND_UNITS, Score: 0.78482\n","Feature: ARROND_SALUBRITES, Score: 0.05279\n","Feature: ARROND_PERMITS, Score: 0.00059\n","Feature: ARROND_VACANCIES, Score: 0.05816\n","Feature: ARROND_TREES, Score: 0.00283\n","Feature: ARROND_RUELLES_VERTES, Score: 0.00000\n","Feature: ARROND_AVG_CONSTRUCTION_YEAR, Score: 0.00005\n","Feature: ARROND_EXTERMINATIONS, Score: 0.04272\n","Feature: AVERAGE_TEMP, Score: 0.00054\n","Feature: ARROND_AIDE_ALIMENTAIRE, Score: 0.05749\n","Feature: ARROND_DETERIOATION_LOGEMENTS, Score: 0.00000\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Feature: INCIDENT_YEAR, Score: 0.02627\n","Feature: INCIDENT_MONTH, Score: 0.02335\n","Feature: CASERNE, Score: 0.07193\n","Feature: NO_CIVIQUE, Score: 0.14808\n","Feature: CASERNE_LATITUDE, Score: 0.43249\n","Feature: CASERNE_LONGITUDE, Score: 0.27407\n","Feature: MTM8_X, Score: 0.01235\n","Feature: MTM8_Y, Score: 0.01147\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Permutation Feature Importance for Regression"],"metadata":{"id":"egKlAx9dXAbc"}},{"cell_type":"code","source":["# permutation feature importance with knn for regression\n","from sklearn.datasets import make_regression\n","from sklearn.neighbors import KNeighborsRegressor\n","from sklearn.inspection import permutation_importance\n","from matplotlib import pyplot\n","\n","# define the model\n","model = KNeighborsRegressor()\n","# fit the model\n","model.fit(x_Arron, y_Arron)\n","# perform permutation importance\n","results = permutation_importance(model, x_Arron, y_Arron, scoring='neg_mean_squared_error')\n","# get importance\n","importance = results.importances_mean\n","# summarize feature importance\n","for i,v in enumerate(importance):\n","\tprint('Feature: %0s, Score: %.5f' % (x_Arron.columns[i],v))\n","# plot feature importance\n","pyplot.bar([x for x in range(len(importance))], importance)\n","pyplot.show()\n","\n","# define the model\n","model = KNeighborsRegressor()\n","# fit the model\n","model.fit(X, y)\n","# perform permutation importance\n","results = permutation_importance(model, X, y, scoring='neg_mean_squared_error')\n","# get importance\n","importance = results.importances_mean\n","# summarize feature importance\n","for i,v in enumerate(importance):\n","\tprint('Feature: %0s, Score: %.5f' % (X.columns[i],v))\n","# plot feature importance\n","pyplot.bar([x for x in range(len(importance))], importance)\n","pyplot.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Iwz_czZTXKNz","executionInfo":{"status":"ok","timestamp":1697038842292,"user_tz":240,"elapsed":5374,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"21785462-b499-4f57-d2dc-3c54f1bd9774"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature: ARROND_UNITS, Score: 17890149.94327\n","Feature: ARROND_SALUBRITES, Score: 0.00000\n","Feature: ARROND_PERMITS, Score: 0.00000\n","Feature: ARROND_VACANCIES, Score: 396721.86933\n","Feature: ARROND_TREES, Score: 567413.09115\n","Feature: ARROND_RUELLES_VERTES, Score: 0.00000\n","Feature: ARROND_AVG_CONSTRUCTION_YEAR, Score: 0.00000\n","Feature: ARROND_EXTERMINATIONS, Score: 0.00000\n","Feature: AVERAGE_TEMP, Score: 715.28097\n","Feature: ARROND_AIDE_ALIMENTAIRE, Score: 127331.61333\n","Feature: ARROND_DETERIOATION_LOGEMENTS, Score: 0.00000\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Feature: INCIDENT_YEAR, Score: 13.79256\n","Feature: INCIDENT_MONTH, Score: 15.08106\n","Feature: CASERNE, Score: 0.02034\n","Feature: NO_CIVIQUE, Score: 63.03970\n","Feature: CASERNE_LATITUDE, Score: 0.01103\n","Feature: CASERNE_LONGITUDE, Score: 0.03590\n","Feature: MTM8_X, Score: 136.27838\n","Feature: MTM8_Y, Score: 124.94174\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Multivariate time series forecasting:"],"metadata":{"id":"PFDrd1djdaPd"}},{"cell_type":"code","source":["#https://www.kaggle.com/code/pateljay731/multivariate-time-series-forecasting\n","import pandas as pd\n","import numpy as np\n","%matplotlib inline\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import LSTM\n","from tensorflow.keras.layers import Dense\n","from tensorflow.keras.layers import Bidirectional\n","from tensorflow.keras.layers import Dropout\n","from tensorflow.keras.layers import Dropout, Flatten"],"metadata":{"id":"-DF5OGs8dFd1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y = dataset[['NUMBER_OF_INCIDENTS', 'date']]\n","X = dataset[['NUMBER_OF_INCIDENTS', 'CASERNE']]"],"metadata":{"id":"U71C-TN3dgSq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_for_training = X.astype(float)"],"metadata":{"id":"17adaIwGgicP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import MinMaxScaler\n","scaler = MinMaxScaler()\n","scaler = scaler.fit(X)\n","df_for_training_scaled = scaler.transform(X)"],"metadata":{"id":"9d3flZBdeJYQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["trainX = []\n","trainY = []\n","trainY = X['NUMBER_OF_INCIDENTS'].to_numpy().reshape(-1,1)\n","trainX = X.to_numpy().reshape(-1, 2  , 1)"],"metadata":{"id":"FtnDKs_SePst"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["trainX, trainY = np.array(trainX), np.array(trainY)\n","trainX_, trainY_ = tf.cast(trainX, dtype='float64'), tf.cast(trainY, dtype='float64')\n","print(trainX.shape)\n","print(trainY.shape)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FRRXzGbkeuGm","executionInfo":{"status":"ok","timestamp":1696863415081,"user_tz":240,"elapsed":203,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"d154a1f8-48f7-4a39-8321-6870f24624f3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(4367, 2, 1)\n","(4367, 1)\n"]}]},{"cell_type":"code","source":["model = Sequential()\n","model.add(Bidirectional(LSTM(64, activation='relu', input_shape=(trainX.shape[1], trainX.shape[2]),return_sequences=True)))\n","                             #return_sequences=True))\n","model.add(Bidirectional(LSTM(32, activation='relu', return_sequences=True)))\n","model.add(Dropout(0.2))\n","model.add(Flatten())\n","model.add(Dense(64, activation='relu'))#, return_sequences=False))\n","model.add(Dense(8, activation='relu'))#, return_sequences=False))\n","model.add(Dense(trainY.shape[1]))\n","\n","model.compile(optimizer='adam', loss='mse')\n"],"metadata":{"id":"i3SF_bQ6dB-N"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history = model.fit(trainX_, trainY_)\n","#validation_split=0.2,\n","plt.plot(history.history['loss'], label='Training loss')\n","#plt.plot(history.history['val_loss'], label='Validation loss')\n","plt.legend()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"9ekX4npvdSrl","executionInfo":{"status":"ok","timestamp":1696863437170,"user_tz":240,"elapsed":22091,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"24464cf5-5266-4f21-ce79-9d5e75f1c255"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["137/137 [==============================] - 18s 18ms/step - loss: 84.4183\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7fa4e3c6b820>"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df_test= pd.read_csv('/kaggle/input/panama-electricity-load-forecasting/Test_Jan.csv',encoding=\"latin-1\")\n","df_test['datetime']=pd.to_datetime(df_test['datetime'])\n","df_test['week_day']=df_test['datetime'].dt.dayofweek\n","df_test['date']=df_test['datetime'].dt.day\n","df_test['month']=df_test['datetime'].dt.month\n","df_test['hour']=df_test['datetime'].dt.hour\n","df_test = add_features(df_test)\n","df_for_pred=df_test.drop(columns=col)\n","df_for_pred.astype(float)\n","df_pred_scaled=scaler.transform(df_for_pred)\n","\n","X_pred = []\n","for i in range(n_past, len(df_pred_scaled) - n_future +1):\n","    X_pred.append(df_for_training_scaled[i - n_past:i, 0:df_for_training.shape[1]])\n","X_pred= np.array(X_pred)\n","\n","print('X for prediction shape == {}.'.format(X_pred.shape))"],"metadata":{"id":"KM74l9FPdT8s","colab":{"base_uri":"https://localhost:8080/","height":400},"executionInfo":{"status":"error","timestamp":1696863438520,"user_tz":240,"elapsed":1358,"user":{"displayName":"Sabi Sasu","userId":"13750713277571627387"}},"outputId":"71a9b46e-3180-4075-cbe0-a285142e26e6"},"execution_count":null,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-17-6952dee60cab>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf_test\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/kaggle/input/panama-electricity-load-forecasting/Test_Jan.csv'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"latin-1\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mdf_test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'datetime'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_datetime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'datetime'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mdf_test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'week_day'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf_test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'datetime'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdayofweek\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mdf_test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'date'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf_test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'datetime'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mday\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mdf_test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'month'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf_test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'datetime'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmonth\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    209\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m                     \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnew_arg_name\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_arg_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 211\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    212\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    213\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mF\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[1;32m    948\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    949\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 950\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    951\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    952\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    603\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    604\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 605\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    606\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    607\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1440\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1441\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1442\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1443\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1444\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1733\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1734\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1735\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1736\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1737\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    854\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    855\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 856\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    857\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    858\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/kaggle/input/panama-electricity-load-forecasting/Test_Jan.csv'"]}]},{"cell_type":"code","source":["prediction = model.predict(X_pred)\n","prediction_copies = np.repeat(prediction, df_for_training.shape[1], axis=-1)\n","y_pred_future = scaler.inverse_transform(prediction_copies)[:,0]\n","y_pred_future\n","df_forecast=[]\n","df_forecast = pd.DataFrame(y_pred_future)\n","temp_df=[]\n","temp_df=pd.DataFrame(np.zeros(n_past))\n","df_forecast =pd.concat([temp_df,df_forecast], ignore_index=True)\n","df_forecast\n","df_actual= pd.read_csv('/kaggle/input/panama-electricity-load-forecasting/Predict_Jan.csv',encoding=\"latin-1\")\n","df_actual['Pred_nat_demand']=df_forecast\n","df_actual = df_actual.iloc[n_past:]\n","df_actual\n","a4_dims = (25,8)\n","fig, ax = plt.subplots(figsize=a4_dims)\n","sns.lineplot(df_actual['datetime'], df_actual['nat_demand'])\n","sns.lineplot(df_actual['datetime'], df_actual['Pred_nat_demand'])"],"metadata":{"id":"oNhJutSUdX0l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction = model.predict(X_pred)\n","prediction_copies = np.repeat(prediction, df_for_training.shape[1], axis=-1)\n","y_pred_future = scaler.inverse_transform(prediction_copies)[:,0]\n","y_pred_future\n","df_forecast=[]\n","df_forecast = pd.DataFrame(y_pred_future)\n","temp_df=[]\n","temp_df=pd.DataFrame(np.zeros(n_past))\n","df_forecast =pd.concat([temp_df,df_forecast], ignore_index=True)\n","df_forecast\n","df_actual= pd.read_csv('/kaggle/input/panama-electricity-load-forecasting/Predict_Jan.csv',encoding=\"latin-1\")\n","df_actual['Pred_nat_demand']=df_forecast\n","df_actual = df_actual.iloc[n_past:]\n","df_actual\n","a4_dims = (25,8)\n","fig, ax = plt.subplots(figsize=a4_dims)\n","sns.lineplot(df_actual['datetime'], df_actual['nat_demand'])\n","sns.lineplot(df_actual['datetime'], df_actual['Pred_nat_demand'])"],"metadata":{"id":"XqY4bnsNdZE5"},"execution_count":null,"outputs":[]}]}